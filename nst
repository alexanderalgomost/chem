{
 "metadata": {
  "name": "",
  "signature": "sha256:b98ae97efa5edde61e65ec6056fc212574d3609b9e3b1a28b15095962807736a"
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import numpy as np\n",
      "import pandas as pd\n",
      "import matplotlib.pyplot as plt\n",
      "%matplotlib inline\n"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 76
    },
    {
     "cell_type": "heading",
     "level": 5,
     "metadata": {},
     "source": [
      "\u0421\u0447\u0438\u0442\u0430\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "\u0412 \u043f\u0435\u0440\u0432\u043e\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0431\u044b\u043b \u0438\u0437\u043c\u0435\u043d\u0435\u043d \u043f\u043e\u0440\u044f\u0434\u043e\u043a \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432."
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "rental = pd.read_excel('Renta2.xlsx')"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 166
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "rental"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div style=\"max-height:1000px;max-width:1500px;overflow:auto;\">\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>id</th>\n",
        "      <th>Price / SF / Month</th>\n",
        "      <th>Space Type:</th>\n",
        "      <th>Lease Type:</th>\n",
        "      <th>Space Size</th>\n",
        "      <th>Number of transport spots</th>\n",
        "      <th>Population</th>\n",
        "      <th>Population change 2013-2010</th>\n",
        "      <th>Land area</th>\n",
        "      <th>Density of people living in area</th>\n",
        "      <th>...</th>\n",
        "      <th>Total density (living + working)</th>\n",
        "      <th>Social chat score</th>\n",
        "      <th>Household size</th>\n",
        "      <th>Average HH income 2013</th>\n",
        "      <th>Income change 2013-2010</th>\n",
        "      <th>Change in % of bachelor degrees 2013-2010</th>\n",
        "      <th>Average salary of employees ($ 000s)</th>\n",
        "      <th>Average salary of employees in new businesses</th>\n",
        "      <th>% of employees in new companies vs all</th>\n",
        "      <th>Number of new retail places 2013-2010</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0   </th>\n",
        "      <td>    1</td>\n",
        "      <td>  2.649241</td>\n",
        "      <td>                     NaN</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>  11324</td>\n",
        "      <td> 14</td>\n",
        "      <td>  6417.318254</td>\n",
        "      <td> 0.104498</td>\n",
        "      <td> 780786.644395</td>\n",
        "      <td> 0.008219</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.010115</td>\n",
        "      <td>   7</td>\n",
        "      <td> 2.811673</td>\n",
        "      <td>  64039</td>\n",
        "      <td> 0.008973</td>\n",
        "      <td> 0.034373</td>\n",
        "      <td> 43000</td>\n",
        "      <td> 42220.615385</td>\n",
        "      <td> 12</td>\n",
        "      <td>   5</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1   </th>\n",
        "      <td>    2</td>\n",
        "      <td>  1.583333</td>\n",
        "      <td>                     NaN</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>   2275</td>\n",
        "      <td> 22</td>\n",
        "      <td>  3902.848712</td>\n",
        "      <td> 0.041712</td>\n",
        "      <td> 646901.202888</td>\n",
        "      <td> 0.006033</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.008253</td>\n",
        "      <td>   7</td>\n",
        "      <td> 2.786308</td>\n",
        "      <td>  77802</td>\n",
        "      <td>-0.069537</td>\n",
        "      <td>-0.001562</td>\n",
        "      <td> 30000</td>\n",
        "      <td> 36709.000000</td>\n",
        "      <td> 12</td>\n",
        "      <td>   2</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2   </th>\n",
        "      <td>    3</td>\n",
        "      <td>  1.583333</td>\n",
        "      <td>                     NaN</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>   2275</td>\n",
        "      <td> 22</td>\n",
        "      <td>  3902.848712</td>\n",
        "      <td> 0.041712</td>\n",
        "      <td> 646901.202888</td>\n",
        "      <td> 0.006033</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.008253</td>\n",
        "      <td>   7</td>\n",
        "      <td> 2.786308</td>\n",
        "      <td>  77802</td>\n",
        "      <td>-0.069537</td>\n",
        "      <td>-0.001562</td>\n",
        "      <td> 30000</td>\n",
        "      <td> 36709.000000</td>\n",
        "      <td> 12</td>\n",
        "      <td>   2</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>3   </th>\n",
        "      <td>    4</td>\n",
        "      <td>  1.583333</td>\n",
        "      <td>                     NaN</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>  17989</td>\n",
        "      <td> 22</td>\n",
        "      <td>  3902.848712</td>\n",
        "      <td> 0.041712</td>\n",
        "      <td> 646901.202888</td>\n",
        "      <td> 0.006033</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.008253</td>\n",
        "      <td>   7</td>\n",
        "      <td> 2.786308</td>\n",
        "      <td>  77802</td>\n",
        "      <td>-0.069537</td>\n",
        "      <td>-0.001562</td>\n",
        "      <td> 30000</td>\n",
        "      <td> 36709.000000</td>\n",
        "      <td> 12</td>\n",
        "      <td>   2</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>4   </th>\n",
        "      <td>    5</td>\n",
        "      <td> 12.500000</td>\n",
        "      <td>                  Anchor</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>    600</td>\n",
        "      <td> 36</td>\n",
        "      <td> 21490.142813</td>\n",
        "      <td>-0.030814</td>\n",
        "      <td> 748996.112024</td>\n",
        "      <td> 0.028692</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.077358</td>\n",
        "      <td>  76</td>\n",
        "      <td> 2.389655</td>\n",
        "      <td>  48409</td>\n",
        "      <td> 0.294904</td>\n",
        "      <td> 0.052086</td>\n",
        "      <td> 62000</td>\n",
        "      <td> 52775.447570</td>\n",
        "      <td> 23</td>\n",
        "      <td> 117</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>5   </th>\n",
        "      <td>    6</td>\n",
        "      <td>  1.166667</td>\n",
        "      <td> Commercial/Other (land)</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>   2600</td>\n",
        "      <td>  5</td>\n",
        "      <td> 11765.526042</td>\n",
        "      <td>-0.064297</td>\n",
        "      <td> 780840.252989</td>\n",
        "      <td> 0.015068</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.018784</td>\n",
        "      <td>   6</td>\n",
        "      <td> 2.971637</td>\n",
        "      <td>  48879</td>\n",
        "      <td> 0.052142</td>\n",
        "      <td> 0.007275</td>\n",
        "      <td> 34000</td>\n",
        "      <td> 33248.059701</td>\n",
        "      <td> 21</td>\n",
        "      <td>   4</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>6   </th>\n",
        "      <td>    7</td>\n",
        "      <td>  1.500000</td>\n",
        "      <td>        Community Center</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>   5500</td>\n",
        "      <td>  0</td>\n",
        "      <td>   397.241957</td>\n",
        "      <td>-0.011405</td>\n",
        "      <td> 780118.338337</td>\n",
        "      <td> 0.000509</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.001035</td>\n",
        "      <td>   0</td>\n",
        "      <td> 2.980000</td>\n",
        "      <td> 106250</td>\n",
        "      <td>-0.025676</td>\n",
        "      <td>-0.023000</td>\n",
        "      <td> 40000</td>\n",
        "      <td> 41656.449438</td>\n",
        "      <td> 28</td>\n",
        "      <td>   1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>7   </th>\n",
        "      <td>    8</td>\n",
        "      <td>  1.432209</td>\n",
        "      <td>        Community Center</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>   1571</td>\n",
        "      <td> 15</td>\n",
        "      <td>  1392.411066</td>\n",
        "      <td>-0.044647</td>\n",
        "      <td> 775638.213091</td>\n",
        "      <td> 0.001795</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.006488</td>\n",
        "      <td>   0</td>\n",
        "      <td> 2.954644</td>\n",
        "      <td>  82126</td>\n",
        "      <td> 0.064768</td>\n",
        "      <td> 0.026377</td>\n",
        "      <td> 48000</td>\n",
        "      <td> 56082.077922</td>\n",
        "      <td> 39</td>\n",
        "      <td>  13</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>8   </th>\n",
        "      <td>    9</td>\n",
        "      <td>  2.333333</td>\n",
        "      <td>        Community Center</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>   2000</td>\n",
        "      <td>  7</td>\n",
        "      <td>  1880.656756</td>\n",
        "      <td> 0.023341</td>\n",
        "      <td> 717315.011979</td>\n",
        "      <td> 0.002622</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.005803</td>\n",
        "      <td>   0</td>\n",
        "      <td> 2.861910</td>\n",
        "      <td> 101156</td>\n",
        "      <td> 0.006208</td>\n",
        "      <td> 0.026515</td>\n",
        "      <td> 45000</td>\n",
        "      <td> 44564.470588</td>\n",
        "      <td> 17</td>\n",
        "      <td>   6</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>9   </th>\n",
        "      <td>   10</td>\n",
        "      <td>  2.500000</td>\n",
        "      <td>        Community Center</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>   1350</td>\n",
        "      <td>  5</td>\n",
        "      <td>  2299.213010</td>\n",
        "      <td>-0.061004</td>\n",
        "      <td> 775940.748428</td>\n",
        "      <td> 0.002963</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.006006</td>\n",
        "      <td>   1</td>\n",
        "      <td> 2.597657</td>\n",
        "      <td> 118938</td>\n",
        "      <td> 0.110803</td>\n",
        "      <td>-0.010159</td>\n",
        "      <td> 52000</td>\n",
        "      <td> 44762.561798</td>\n",
        "      <td> 21</td>\n",
        "      <td>   7</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>10  </th>\n",
        "      <td>   11</td>\n",
        "      <td>  2.500000</td>\n",
        "      <td>        Community Center</td>\n",
        "      <td>   NaN</td>\n",
        "      <td> 100000</td>\n",
        "      <td> 21</td>\n",
        "      <td> 19050.128945</td>\n",
        "      <td> 0.035153</td>\n",
        "      <td> 780832.313632</td>\n",
        "      <td> 0.024397</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.029663</td>\n",
        "      <td>  14</td>\n",
        "      <td> 4.160368</td>\n",
        "      <td>  30717</td>\n",
        "      <td> 0.396891</td>\n",
        "      <td> 0.007415</td>\n",
        "      <td> 35000</td>\n",
        "      <td> 34983.760563</td>\n",
        "      <td> 27</td>\n",
        "      <td>   7</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>11  </th>\n",
        "      <td>   12</td>\n",
        "      <td>  2.500000</td>\n",
        "      <td>           Creative/Loft</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>   6000</td>\n",
        "      <td> 26</td>\n",
        "      <td> 21819.146142</td>\n",
        "      <td>-0.019197</td>\n",
        "      <td> 780827.672986</td>\n",
        "      <td> 0.027944</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.035851</td>\n",
        "      <td>  17</td>\n",
        "      <td> 2.126842</td>\n",
        "      <td>  56139</td>\n",
        "      <td> 0.157420</td>\n",
        "      <td> 0.004322</td>\n",
        "      <td> 43000</td>\n",
        "      <td> 35352.000000</td>\n",
        "      <td> 34</td>\n",
        "      <td>  27</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>12  </th>\n",
        "      <td>   13</td>\n",
        "      <td>  1.600000</td>\n",
        "      <td>           Creative/Loft</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>   1000</td>\n",
        "      <td> 15</td>\n",
        "      <td>  9396.862581</td>\n",
        "      <td>-0.016277</td>\n",
        "      <td> 608539.667689</td>\n",
        "      <td> 0.015442</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.021221</td>\n",
        "      <td>  15</td>\n",
        "      <td> 2.686434</td>\n",
        "      <td>  17528</td>\n",
        "      <td> 0.035113</td>\n",
        "      <td>-0.008365</td>\n",
        "      <td> 55000</td>\n",
        "      <td> 42160.486957</td>\n",
        "      <td> 33</td>\n",
        "      <td>   6</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>13  </th>\n",
        "      <td>   14</td>\n",
        "      <td>  2.294118</td>\n",
        "      <td>           Creative/Loft</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>    850</td>\n",
        "      <td> 47</td>\n",
        "      <td> 21359.310595</td>\n",
        "      <td> 0.049734</td>\n",
        "      <td> 760972.628675</td>\n",
        "      <td> 0.028068</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.035685</td>\n",
        "      <td>  12</td>\n",
        "      <td> 2.269170</td>\n",
        "      <td>  36804</td>\n",
        "      <td> 0.108195</td>\n",
        "      <td>-0.000858</td>\n",
        "      <td> 52000</td>\n",
        "      <td> 45961.124122</td>\n",
        "      <td> 23</td>\n",
        "      <td>  16</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>14  </th>\n",
        "      <td>   15</td>\n",
        "      <td>  3.333333</td>\n",
        "      <td>           Creative/Loft</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>   3500</td>\n",
        "      <td> 13</td>\n",
        "      <td> 11956.287753</td>\n",
        "      <td> 0.035635</td>\n",
        "      <td> 671581.693225</td>\n",
        "      <td> 0.017803</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.025204</td>\n",
        "      <td> 761</td>\n",
        "      <td> 2.163809</td>\n",
        "      <td>  89390</td>\n",
        "      <td> 0.018720</td>\n",
        "      <td> 0.018365</td>\n",
        "      <td> 61000</td>\n",
        "      <td> 41005.344398</td>\n",
        "      <td> 34</td>\n",
        "      <td>  14</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>15  </th>\n",
        "      <td>   16</td>\n",
        "      <td>  7.500000</td>\n",
        "      <td>           Creative/Loft</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>   2500</td>\n",
        "      <td> 36</td>\n",
        "      <td> 12209.379009</td>\n",
        "      <td>-0.012891</td>\n",
        "      <td> 516119.628877</td>\n",
        "      <td> 0.023656</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.088023</td>\n",
        "      <td> 203</td>\n",
        "      <td> 1.779194</td>\n",
        "      <td>  88866</td>\n",
        "      <td> 0.322957</td>\n",
        "      <td> 0.037330</td>\n",
        "      <td> 70000</td>\n",
        "      <td> 13088.968624</td>\n",
        "      <td> 55</td>\n",
        "      <td>  61</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>16  </th>\n",
        "      <td>   17</td>\n",
        "      <td>  7.500000</td>\n",
        "      <td>           Creative/Loft</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>   2500</td>\n",
        "      <td> 36</td>\n",
        "      <td> 12209.379009</td>\n",
        "      <td>-0.012891</td>\n",
        "      <td> 516119.628877</td>\n",
        "      <td> 0.023656</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.088023</td>\n",
        "      <td> 203</td>\n",
        "      <td> 1.779194</td>\n",
        "      <td>  88866</td>\n",
        "      <td> 0.322957</td>\n",
        "      <td> 0.037330</td>\n",
        "      <td> 70000</td>\n",
        "      <td> 13088.968624</td>\n",
        "      <td> 55</td>\n",
        "      <td>  61</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>17  </th>\n",
        "      <td>   18</td>\n",
        "      <td>  7.500000</td>\n",
        "      <td>           Creative/Loft</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>   2500</td>\n",
        "      <td> 36</td>\n",
        "      <td> 12209.379009</td>\n",
        "      <td>-0.012891</td>\n",
        "      <td> 516119.628877</td>\n",
        "      <td> 0.023656</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.088023</td>\n",
        "      <td> 203</td>\n",
        "      <td> 1.779194</td>\n",
        "      <td>  88866</td>\n",
        "      <td> 0.322957</td>\n",
        "      <td> 0.037330</td>\n",
        "      <td> 70000</td>\n",
        "      <td> 13088.968624</td>\n",
        "      <td> 55</td>\n",
        "      <td>  61</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>18  </th>\n",
        "      <td>   19</td>\n",
        "      <td>  7.500000</td>\n",
        "      <td>           Creative/Loft</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>   2500</td>\n",
        "      <td> 36</td>\n",
        "      <td> 12209.379009</td>\n",
        "      <td>-0.012891</td>\n",
        "      <td> 516119.628877</td>\n",
        "      <td> 0.023656</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.088023</td>\n",
        "      <td> 203</td>\n",
        "      <td> 1.779194</td>\n",
        "      <td>  88866</td>\n",
        "      <td> 0.322957</td>\n",
        "      <td> 0.037330</td>\n",
        "      <td> 70000</td>\n",
        "      <td> 13088.968624</td>\n",
        "      <td> 55</td>\n",
        "      <td>  61</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>19  </th>\n",
        "      <td>   20</td>\n",
        "      <td>  2.235294</td>\n",
        "      <td>      Free Standing Bldg</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>   1700</td>\n",
        "      <td> 11</td>\n",
        "      <td>  1079.201017</td>\n",
        "      <td> 0.029399</td>\n",
        "      <td> 770178.626994</td>\n",
        "      <td> 0.001401</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.006790</td>\n",
        "      <td>   0</td>\n",
        "      <td> 2.836050</td>\n",
        "      <td> 101664</td>\n",
        "      <td>-0.042192</td>\n",
        "      <td>-0.008583</td>\n",
        "      <td> 57000</td>\n",
        "      <td> 61351.535836</td>\n",
        "      <td>  8</td>\n",
        "      <td>   1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>20  </th>\n",
        "      <td>   21</td>\n",
        "      <td>  3.411765</td>\n",
        "      <td>      Free Standing Bldg</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>   1700</td>\n",
        "      <td> 11</td>\n",
        "      <td>  1079.201017</td>\n",
        "      <td> 0.029399</td>\n",
        "      <td> 770178.626994</td>\n",
        "      <td> 0.001401</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.006790</td>\n",
        "      <td>   0</td>\n",
        "      <td> 2.836050</td>\n",
        "      <td> 101664</td>\n",
        "      <td>-0.042192</td>\n",
        "      <td>-0.008583</td>\n",
        "      <td> 57000</td>\n",
        "      <td> 61351.535836</td>\n",
        "      <td>  8</td>\n",
        "      <td>   1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>21  </th>\n",
        "      <td>   22</td>\n",
        "      <td>  3.750000</td>\n",
        "      <td>      Free Standing Bldg</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>   3400</td>\n",
        "      <td> 11</td>\n",
        "      <td>  1079.201017</td>\n",
        "      <td> 0.029399</td>\n",
        "      <td> 770178.626994</td>\n",
        "      <td> 0.001401</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.006790</td>\n",
        "      <td>   0</td>\n",
        "      <td> 2.836050</td>\n",
        "      <td> 101664</td>\n",
        "      <td>-0.042192</td>\n",
        "      <td>-0.008583</td>\n",
        "      <td> 57000</td>\n",
        "      <td> 61351.535836</td>\n",
        "      <td>  8</td>\n",
        "      <td>   1</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>22  </th>\n",
        "      <td>   23</td>\n",
        "      <td>  2.666667</td>\n",
        "      <td>      Free Standing Bldg</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>  44852</td>\n",
        "      <td> 25</td>\n",
        "      <td> 21131.643318</td>\n",
        "      <td>-0.028634</td>\n",
        "      <td> 780826.286038</td>\n",
        "      <td> 0.027063</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.031953</td>\n",
        "      <td>   7</td>\n",
        "      <td> 2.842992</td>\n",
        "      <td>  23312</td>\n",
        "      <td> 0.086444</td>\n",
        "      <td> 0.006918</td>\n",
        "      <td> 35000</td>\n",
        "      <td> 28871.294118</td>\n",
        "      <td> 24</td>\n",
        "      <td>  20</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>23  </th>\n",
        "      <td>   24</td>\n",
        "      <td>  3.225806</td>\n",
        "      <td>      Free Standing Bldg</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>    620</td>\n",
        "      <td> 23</td>\n",
        "      <td> 13801.142786</td>\n",
        "      <td>-0.000353</td>\n",
        "      <td> 780826.098334</td>\n",
        "      <td> 0.017675</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.023155</td>\n",
        "      <td>   4</td>\n",
        "      <td> 2.615314</td>\n",
        "      <td>  29392</td>\n",
        "      <td>-0.047047</td>\n",
        "      <td> 0.005367</td>\n",
        "      <td> 46000</td>\n",
        "      <td> 66896.690141</td>\n",
        "      <td> 62</td>\n",
        "      <td>  12</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>24  </th>\n",
        "      <td>   25</td>\n",
        "      <td>  3.333333</td>\n",
        "      <td>      Free Standing Bldg</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>    600</td>\n",
        "      <td> 24</td>\n",
        "      <td> 13789.902082</td>\n",
        "      <td>-0.019856</td>\n",
        "      <td> 730787.241438</td>\n",
        "      <td> 0.018870</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.026830</td>\n",
        "      <td>  13</td>\n",
        "      <td> 2.837321</td>\n",
        "      <td>  20133</td>\n",
        "      <td> 0.065334</td>\n",
        "      <td>-0.006536</td>\n",
        "      <td> 42000</td>\n",
        "      <td> 40930.000000</td>\n",
        "      <td> 11</td>\n",
        "      <td>   4</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>25  </th>\n",
        "      <td>   26</td>\n",
        "      <td>  1.538462</td>\n",
        "      <td>      Free Standing Bldg</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>   2275</td>\n",
        "      <td> 20</td>\n",
        "      <td> 11941.303726</td>\n",
        "      <td> 0.045930</td>\n",
        "      <td> 778959.656775</td>\n",
        "      <td> 0.015330</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.020557</td>\n",
        "      <td>  23</td>\n",
        "      <td> 3.069252</td>\n",
        "      <td>  43919</td>\n",
        "      <td> 0.190475</td>\n",
        "      <td> 0.036245</td>\n",
        "      <td> 35000</td>\n",
        "      <td> 25460.090652</td>\n",
        "      <td> 27</td>\n",
        "      <td>  26</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>26  </th>\n",
        "      <td>   27</td>\n",
        "      <td>  2.363636</td>\n",
        "      <td>      Free Standing Bldg</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>   1100</td>\n",
        "      <td> 20</td>\n",
        "      <td> 18082.317925</td>\n",
        "      <td>-0.039515</td>\n",
        "      <td> 780835.841519</td>\n",
        "      <td> 0.023158</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.026399</td>\n",
        "      <td>   3</td>\n",
        "      <td> 2.825713</td>\n",
        "      <td>  42215</td>\n",
        "      <td> 0.109277</td>\n",
        "      <td>-0.009887</td>\n",
        "      <td> 32000</td>\n",
        "      <td> 27616.714286</td>\n",
        "      <td> 31</td>\n",
        "      <td>  20</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>27  </th>\n",
        "      <td>   28</td>\n",
        "      <td>  2.916667</td>\n",
        "      <td>      Free Standing Bldg</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>  10000</td>\n",
        "      <td> 25</td>\n",
        "      <td> 10482.985237</td>\n",
        "      <td>-0.001402</td>\n",
        "      <td> 743597.585861</td>\n",
        "      <td> 0.014098</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.020991</td>\n",
        "      <td>  15</td>\n",
        "      <td> 2.434116</td>\n",
        "      <td>  47429</td>\n",
        "      <td>-0.098910</td>\n",
        "      <td>-0.024943</td>\n",
        "      <td> 43000</td>\n",
        "      <td> 38803.656307</td>\n",
        "      <td> 25</td>\n",
        "      <td>  24</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>28  </th>\n",
        "      <td>   29</td>\n",
        "      <td> 11.444266</td>\n",
        "      <td>      Free Standing Bldg</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>   4369</td>\n",
        "      <td> 17</td>\n",
        "      <td>  4422.607443</td>\n",
        "      <td> 0.040199</td>\n",
        "      <td> 625807.085661</td>\n",
        "      <td> 0.007067</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.014114</td>\n",
        "      <td>  22</td>\n",
        "      <td> 1.880590</td>\n",
        "      <td>  89966</td>\n",
        "      <td> 0.227371</td>\n",
        "      <td>-0.002911</td>\n",
        "      <td> 47000</td>\n",
        "      <td> 39720.201342</td>\n",
        "      <td> 27</td>\n",
        "      <td>  14</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>29  </th>\n",
        "      <td>   30</td>\n",
        "      <td>  2.333333</td>\n",
        "      <td>      Free Standing Bldg</td>\n",
        "      <td>   NaN</td>\n",
        "      <td>  14500</td>\n",
        "      <td> 30</td>\n",
        "      <td> 18871.028437</td>\n",
        "      <td> 0.045790</td>\n",
        "      <td> 779460.786078</td>\n",
        "      <td> 0.024210</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.027196</td>\n",
        "      <td>   9</td>\n",
        "      <td> 2.597693</td>\n",
        "      <td>  42770</td>\n",
        "      <td> 0.092473</td>\n",
        "      <td> 0.002811</td>\n",
        "      <td> 35000</td>\n",
        "      <td> 28763.649123</td>\n",
        "      <td> 34</td>\n",
        "      <td>   8</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>...</th>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "      <td>...</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2197</th>\n",
        "      <td> 2198</td>\n",
        "      <td>  2.500000</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>   1000</td>\n",
        "      <td> 22</td>\n",
        "      <td>  4836.495197</td>\n",
        "      <td>-0.013942</td>\n",
        "      <td> 772640.444726</td>\n",
        "      <td> 0.006260</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.008670</td>\n",
        "      <td>  14</td>\n",
        "      <td> 2.694161</td>\n",
        "      <td>  72409</td>\n",
        "      <td> 0.106724</td>\n",
        "      <td> 0.055938</td>\n",
        "      <td> 38000</td>\n",
        "      <td> 36195.081712</td>\n",
        "      <td> 22</td>\n",
        "      <td>  14</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2198</th>\n",
        "      <td> 2199</td>\n",
        "      <td>  3.142857</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>    700</td>\n",
        "      <td> 25</td>\n",
        "      <td> 10786.368465</td>\n",
        "      <td>-0.028927</td>\n",
        "      <td> 780803.834365</td>\n",
        "      <td> 0.013814</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.016286</td>\n",
        "      <td>  10</td>\n",
        "      <td> 2.281428</td>\n",
        "      <td>  64530</td>\n",
        "      <td> 0.217606</td>\n",
        "      <td>-0.002812</td>\n",
        "      <td> 48000</td>\n",
        "      <td> 37087.632787</td>\n",
        "      <td> 30</td>\n",
        "      <td>  11</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2199</th>\n",
        "      <td> 2200</td>\n",
        "      <td>  3.489933</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>   1490</td>\n",
        "      <td> 21</td>\n",
        "      <td>  8851.625727</td>\n",
        "      <td> 0.025442</td>\n",
        "      <td> 734792.492326</td>\n",
        "      <td> 0.012046</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.018236</td>\n",
        "      <td>   5</td>\n",
        "      <td> 2.034515</td>\n",
        "      <td>  74101</td>\n",
        "      <td> 0.029439</td>\n",
        "      <td> 0.023702</td>\n",
        "      <td> 52000</td>\n",
        "      <td> 51245.575758</td>\n",
        "      <td> 19</td>\n",
        "      <td>   9</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2200</th>\n",
        "      <td> 2201</td>\n",
        "      <td>  2.428571</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>   3500</td>\n",
        "      <td> 19</td>\n",
        "      <td> 22958.105348</td>\n",
        "      <td> 0.008241</td>\n",
        "      <td> 780808.334019</td>\n",
        "      <td> 0.029403</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.037273</td>\n",
        "      <td>   4</td>\n",
        "      <td> 2.178954</td>\n",
        "      <td>  54060</td>\n",
        "      <td> 0.048396</td>\n",
        "      <td>-0.028343</td>\n",
        "      <td> 44000</td>\n",
        "      <td> 38568.605578</td>\n",
        "      <td> 21</td>\n",
        "      <td>  21</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2201</th>\n",
        "      <td> 2202</td>\n",
        "      <td>  2.750000</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>   1000</td>\n",
        "      <td> 20</td>\n",
        "      <td> 17002.881180</td>\n",
        "      <td>-0.028898</td>\n",
        "      <td> 780803.939240</td>\n",
        "      <td> 0.021776</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.023791</td>\n",
        "      <td>   8</td>\n",
        "      <td> 3.672644</td>\n",
        "      <td>  45518</td>\n",
        "      <td> 0.045490</td>\n",
        "      <td>-0.015360</td>\n",
        "      <td> 34000</td>\n",
        "      <td> 30198.204545</td>\n",
        "      <td> 25</td>\n",
        "      <td>  13</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2202</th>\n",
        "      <td> 2203</td>\n",
        "      <td>  3.333333</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>    600</td>\n",
        "      <td> 20</td>\n",
        "      <td> 16682.356921</td>\n",
        "      <td>-0.034413</td>\n",
        "      <td> 780806.314888</td>\n",
        "      <td> 0.021366</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.024165</td>\n",
        "      <td>   4</td>\n",
        "      <td> 3.636842</td>\n",
        "      <td>  41963</td>\n",
        "      <td> 0.013050</td>\n",
        "      <td>-0.014017</td>\n",
        "      <td> 32000</td>\n",
        "      <td> 26303.678571</td>\n",
        "      <td> 23</td>\n",
        "      <td>  15</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2203</th>\n",
        "      <td> 2204</td>\n",
        "      <td>  3.500000</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>   1000</td>\n",
        "      <td> 23</td>\n",
        "      <td> 20618.457107</td>\n",
        "      <td>-0.023904</td>\n",
        "      <td> 780829.227932</td>\n",
        "      <td> 0.026406</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.030922</td>\n",
        "      <td>   1</td>\n",
        "      <td> 2.775884</td>\n",
        "      <td>  37827</td>\n",
        "      <td> 0.015762</td>\n",
        "      <td>-0.013291</td>\n",
        "      <td> 34000</td>\n",
        "      <td> 34129.279412</td>\n",
        "      <td> 31</td>\n",
        "      <td>   9</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2204</th>\n",
        "      <td> 2205</td>\n",
        "      <td>  6.000000</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>   2000</td>\n",
        "      <td> 36</td>\n",
        "      <td>  1471.814998</td>\n",
        "      <td> 0.059209</td>\n",
        "      <td> 771264.458437</td>\n",
        "      <td> 0.001908</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.026808</td>\n",
        "      <td>  11</td>\n",
        "      <td> 2.079127</td>\n",
        "      <td>  80864</td>\n",
        "      <td> 0.110831</td>\n",
        "      <td>-0.087200</td>\n",
        "      <td> 45000</td>\n",
        "      <td> 49021.349518</td>\n",
        "      <td> 61</td>\n",
        "      <td>  29</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2205</th>\n",
        "      <td> 2206</td>\n",
        "      <td>  2.833333</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>   6000</td>\n",
        "      <td> 28</td>\n",
        "      <td> 19723.427370</td>\n",
        "      <td> 0.021015</td>\n",
        "      <td> 780833.102203</td>\n",
        "      <td> 0.025259</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.028168</td>\n",
        "      <td>   7</td>\n",
        "      <td> 2.710644</td>\n",
        "      <td>  31166</td>\n",
        "      <td> 0.251520</td>\n",
        "      <td>-0.010631</td>\n",
        "      <td> 35000</td>\n",
        "      <td> 30532.142132</td>\n",
        "      <td> 24</td>\n",
        "      <td>   7</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2206</th>\n",
        "      <td> 2207</td>\n",
        "      <td>  6.444444</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>   1350</td>\n",
        "      <td> 40</td>\n",
        "      <td> 15068.972173</td>\n",
        "      <td> 0.085663</td>\n",
        "      <td> 777163.161147</td>\n",
        "      <td> 0.019390</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.032472</td>\n",
        "      <td>  25</td>\n",
        "      <td> 2.311461</td>\n",
        "      <td>  42802</td>\n",
        "      <td> 0.188671</td>\n",
        "      <td>-0.000674</td>\n",
        "      <td> 56000</td>\n",
        "      <td> 50079.344262</td>\n",
        "      <td> 20</td>\n",
        "      <td>  17</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2207</th>\n",
        "      <td> 2208</td>\n",
        "      <td>  5.402010</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>    995</td>\n",
        "      <td> 39</td>\n",
        "      <td> 16668.410392</td>\n",
        "      <td> 0.010416</td>\n",
        "      <td> 780836.694825</td>\n",
        "      <td> 0.021347</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.026114</td>\n",
        "      <td>  19</td>\n",
        "      <td> 2.226733</td>\n",
        "      <td>  47784</td>\n",
        "      <td> 0.103041</td>\n",
        "      <td> 0.026855</td>\n",
        "      <td> 33000</td>\n",
        "      <td> 26858.500000</td>\n",
        "      <td> 25</td>\n",
        "      <td>  28</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2208</th>\n",
        "      <td> 2209</td>\n",
        "      <td>  4.705882</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>    850</td>\n",
        "      <td> 42</td>\n",
        "      <td> 16739.662993</td>\n",
        "      <td> 0.004533</td>\n",
        "      <td> 780837.272847</td>\n",
        "      <td> 0.021438</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.026406</td>\n",
        "      <td>  22</td>\n",
        "      <td> 2.217259</td>\n",
        "      <td>  47863</td>\n",
        "      <td> 0.099399</td>\n",
        "      <td> 0.022175</td>\n",
        "      <td> 33000</td>\n",
        "      <td> 28396.009615</td>\n",
        "      <td> 27</td>\n",
        "      <td>  31</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2209</th>\n",
        "      <td> 2210</td>\n",
        "      <td>  3.625000</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>    800</td>\n",
        "      <td> 39</td>\n",
        "      <td> 17092.284188</td>\n",
        "      <td> 0.024514</td>\n",
        "      <td> 780837.021295</td>\n",
        "      <td> 0.021890</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.025330</td>\n",
        "      <td>  17</td>\n",
        "      <td> 2.452883</td>\n",
        "      <td>  49383</td>\n",
        "      <td> 0.231231</td>\n",
        "      <td> 0.008012</td>\n",
        "      <td> 31000</td>\n",
        "      <td> 28116.992481</td>\n",
        "      <td> 29</td>\n",
        "      <td>  11</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2210</th>\n",
        "      <td> 2211</td>\n",
        "      <td> 10.000000</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>  15000</td>\n",
        "      <td> 33</td>\n",
        "      <td> 14117.380836</td>\n",
        "      <td> 0.020214</td>\n",
        "      <td> 512653.773047</td>\n",
        "      <td> 0.027538</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.039993</td>\n",
        "      <td>  18</td>\n",
        "      <td> 3.010305</td>\n",
        "      <td>  29705</td>\n",
        "      <td> 0.141801</td>\n",
        "      <td> 0.005177</td>\n",
        "      <td> 61000</td>\n",
        "      <td> 48403.464567</td>\n",
        "      <td> 28</td>\n",
        "      <td>  14</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2211</th>\n",
        "      <td> 2212</td>\n",
        "      <td>  9.166667</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>    600</td>\n",
        "      <td> 44</td>\n",
        "      <td> 37331.834049</td>\n",
        "      <td>-0.081527</td>\n",
        "      <td> 773318.828875</td>\n",
        "      <td> 0.048275</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.081350</td>\n",
        "      <td>  26</td>\n",
        "      <td> 1.721332</td>\n",
        "      <td> 121847</td>\n",
        "      <td> 0.035776</td>\n",
        "      <td>-0.027832</td>\n",
        "      <td> 65000</td>\n",
        "      <td> 55621.594684</td>\n",
        "      <td> 23</td>\n",
        "      <td>  56</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2212</th>\n",
        "      <td> 2213</td>\n",
        "      <td>  2.916667</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>   3800</td>\n",
        "      <td> 23</td>\n",
        "      <td> 14494.373637</td>\n",
        "      <td>-0.054168</td>\n",
        "      <td> 780839.074355</td>\n",
        "      <td> 0.018563</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.027059</td>\n",
        "      <td>   6</td>\n",
        "      <td> 2.781899</td>\n",
        "      <td>  45211</td>\n",
        "      <td> 0.122909</td>\n",
        "      <td>-0.024807</td>\n",
        "      <td> 38000</td>\n",
        "      <td> 40968.824834</td>\n",
        "      <td> 23</td>\n",
        "      <td>  21</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2213</th>\n",
        "      <td> 2214</td>\n",
        "      <td> 38.181818</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>   1100</td>\n",
        "      <td> 30</td>\n",
        "      <td> 17366.016458</td>\n",
        "      <td>-0.036745</td>\n",
        "      <td> 740715.046865</td>\n",
        "      <td> 0.023445</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.051888</td>\n",
        "      <td>  22</td>\n",
        "      <td> 2.043480</td>\n",
        "      <td> 177611</td>\n",
        "      <td>-0.039029</td>\n",
        "      <td>-0.033250</td>\n",
        "      <td> 64000</td>\n",
        "      <td> 69720.198347</td>\n",
        "      <td> 13</td>\n",
        "      <td>  21</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2214</th>\n",
        "      <td> 2215</td>\n",
        "      <td>  6.637931</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>    580</td>\n",
        "      <td> 44</td>\n",
        "      <td> 12146.233956</td>\n",
        "      <td> 0.095393</td>\n",
        "      <td> 780194.843653</td>\n",
        "      <td> 0.015568</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.030731</td>\n",
        "      <td>  34</td>\n",
        "      <td> 2.203374</td>\n",
        "      <td>  74309</td>\n",
        "      <td> 0.217686</td>\n",
        "      <td> 0.012764</td>\n",
        "      <td> 33000</td>\n",
        "      <td> 33778.237368</td>\n",
        "      <td> 21</td>\n",
        "      <td>   9</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2215</th>\n",
        "      <td> 2216</td>\n",
        "      <td> 13.888889</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>   1080</td>\n",
        "      <td> 54</td>\n",
        "      <td> 33786.376638</td>\n",
        "      <td> 0.024436</td>\n",
        "      <td> 763517.828275</td>\n",
        "      <td> 0.044251</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.104746</td>\n",
        "      <td>  83</td>\n",
        "      <td> 1.811104</td>\n",
        "      <td>  91547</td>\n",
        "      <td> 0.159497</td>\n",
        "      <td> 0.030231</td>\n",
        "      <td> 63000</td>\n",
        "      <td> 45398.303030</td>\n",
        "      <td> 34</td>\n",
        "      <td> 139</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2216</th>\n",
        "      <td> 2217</td>\n",
        "      <td> 10.666667</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>   3000</td>\n",
        "      <td> 62</td>\n",
        "      <td> 20744.121719</td>\n",
        "      <td>-0.055788</td>\n",
        "      <td> 780848.558967</td>\n",
        "      <td> 0.026566</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.142061</td>\n",
        "      <td> 118</td>\n",
        "      <td> 1.654613</td>\n",
        "      <td>  71569</td>\n",
        "      <td> 0.052953</td>\n",
        "      <td>-0.000297</td>\n",
        "      <td> 90000</td>\n",
        "      <td> 54636.322870</td>\n",
        "      <td> 16</td>\n",
        "      <td> 100</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2217</th>\n",
        "      <td> 2218</td>\n",
        "      <td> 14.583333</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>   4100</td>\n",
        "      <td> 62</td>\n",
        "      <td> 27310.378125</td>\n",
        "      <td> 0.019736</td>\n",
        "      <td> 780846.127064</td>\n",
        "      <td> 0.034975</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.095040</td>\n",
        "      <td> 116</td>\n",
        "      <td> 1.706837</td>\n",
        "      <td> 112730</td>\n",
        "      <td> 0.094048</td>\n",
        "      <td> 0.041521</td>\n",
        "      <td> 64000</td>\n",
        "      <td> 54374.134078</td>\n",
        "      <td> 17</td>\n",
        "      <td>  52</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2218</th>\n",
        "      <td> 2219</td>\n",
        "      <td> 25.000000</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>   1800</td>\n",
        "      <td> 34</td>\n",
        "      <td> 20694.697123</td>\n",
        "      <td>-0.029976</td>\n",
        "      <td> 780846.687106</td>\n",
        "      <td> 0.026503</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.091475</td>\n",
        "      <td>  85</td>\n",
        "      <td> 2.096526</td>\n",
        "      <td>  66295</td>\n",
        "      <td> 0.239750</td>\n",
        "      <td> 0.037885</td>\n",
        "      <td> 64000</td>\n",
        "      <td> 48134.101729</td>\n",
        "      <td> 28</td>\n",
        "      <td> 113</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2219</th>\n",
        "      <td> 2220</td>\n",
        "      <td> 27.500000</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>    600</td>\n",
        "      <td> 59</td>\n",
        "      <td> 12698.096512</td>\n",
        "      <td>-0.049986</td>\n",
        "      <td> 583347.990085</td>\n",
        "      <td> 0.021768</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.253856</td>\n",
        "      <td>  87</td>\n",
        "      <td> 1.888026</td>\n",
        "      <td> 124129</td>\n",
        "      <td> 0.096407</td>\n",
        "      <td> 0.043050</td>\n",
        "      <td> 89000</td>\n",
        "      <td> 70816.452015</td>\n",
        "      <td> 16</td>\n",
        "      <td> 104</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2220</th>\n",
        "      <td> 2221</td>\n",
        "      <td> 35.000000</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>    200</td>\n",
        "      <td> 59</td>\n",
        "      <td> 12698.096512</td>\n",
        "      <td>-0.049986</td>\n",
        "      <td> 583347.990085</td>\n",
        "      <td> 0.021768</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.253856</td>\n",
        "      <td>  87</td>\n",
        "      <td> 1.888026</td>\n",
        "      <td> 124129</td>\n",
        "      <td> 0.096407</td>\n",
        "      <td> 0.043050</td>\n",
        "      <td> 89000</td>\n",
        "      <td> 70816.452015</td>\n",
        "      <td> 16</td>\n",
        "      <td> 104</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2221</th>\n",
        "      <td> 2222</td>\n",
        "      <td>  3.333333</td>\n",
        "      <td>           Street Retail</td>\n",
        "      <td> Other</td>\n",
        "      <td>   4500</td>\n",
        "      <td> 26</td>\n",
        "      <td> 17032.401244</td>\n",
        "      <td> 0.045519</td>\n",
        "      <td> 776814.291592</td>\n",
        "      <td> 0.021926</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.028209</td>\n",
        "      <td>   5</td>\n",
        "      <td> 3.323779</td>\n",
        "      <td>  41701</td>\n",
        "      <td> 0.133925</td>\n",
        "      <td>-0.003014</td>\n",
        "      <td> 37000</td>\n",
        "      <td> 25507.919192</td>\n",
        "      <td> 16</td>\n",
        "      <td>  25</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2222</th>\n",
        "      <td> 2223</td>\n",
        "      <td>  3.176471</td>\n",
        "      <td>            Strip Center</td>\n",
        "      <td> Other</td>\n",
        "      <td>    850</td>\n",
        "      <td>  5</td>\n",
        "      <td>  1281.356304</td>\n",
        "      <td> 0.010106</td>\n",
        "      <td> 530800.998897</td>\n",
        "      <td> 0.002414</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.005020</td>\n",
        "      <td>   1</td>\n",
        "      <td> 2.700515</td>\n",
        "      <td>  67916</td>\n",
        "      <td>-0.115978</td>\n",
        "      <td>-0.014467</td>\n",
        "      <td> 41000</td>\n",
        "      <td> 31112.857143</td>\n",
        "      <td> 21</td>\n",
        "      <td>   6</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2223</th>\n",
        "      <td> 2224</td>\n",
        "      <td>  3.333333</td>\n",
        "      <td>            Strip Center</td>\n",
        "      <td> Other</td>\n",
        "      <td>    750</td>\n",
        "      <td>  5</td>\n",
        "      <td>  1287.888981</td>\n",
        "      <td> 0.010031</td>\n",
        "      <td> 531670.106062</td>\n",
        "      <td> 0.002422</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.005024</td>\n",
        "      <td>   0</td>\n",
        "      <td> 2.700169</td>\n",
        "      <td>  67891</td>\n",
        "      <td>-0.116030</td>\n",
        "      <td>-0.014471</td>\n",
        "      <td> 41000</td>\n",
        "      <td> 31112.857143</td>\n",
        "      <td> 21</td>\n",
        "      <td>   6</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2224</th>\n",
        "      <td> 2225</td>\n",
        "      <td>  3.750000</td>\n",
        "      <td>            Strip Center</td>\n",
        "      <td> Other</td>\n",
        "      <td>   2800</td>\n",
        "      <td> 23</td>\n",
        "      <td> 13910.284784</td>\n",
        "      <td> 0.007666</td>\n",
        "      <td> 780830.279753</td>\n",
        "      <td> 0.017815</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.022761</td>\n",
        "      <td>   5</td>\n",
        "      <td> 2.486254</td>\n",
        "      <td>  52680</td>\n",
        "      <td> 0.083109</td>\n",
        "      <td> 0.036457</td>\n",
        "      <td> 36000</td>\n",
        "      <td> 36200.172973</td>\n",
        "      <td> 27</td>\n",
        "      <td>   7</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2225</th>\n",
        "      <td> 2226</td>\n",
        "      <td>  0.675371</td>\n",
        "      <td>         Vehicle Related</td>\n",
        "      <td> Other</td>\n",
        "      <td>   2221</td>\n",
        "      <td> 36</td>\n",
        "      <td> 17298.932016</td>\n",
        "      <td>-0.049389</td>\n",
        "      <td> 780830.011503</td>\n",
        "      <td> 0.022155</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.029262</td>\n",
        "      <td>   5</td>\n",
        "      <td> 2.161185</td>\n",
        "      <td>  41880</td>\n",
        "      <td> 0.260443</td>\n",
        "      <td> 0.061389</td>\n",
        "      <td> 33000</td>\n",
        "      <td> 33390.756972</td>\n",
        "      <td> 38</td>\n",
        "      <td>  11</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2226</th>\n",
        "      <td> 2227</td>\n",
        "      <td>  1.250000</td>\n",
        "      <td>               Warehouse</td>\n",
        "      <td> Other</td>\n",
        "      <td> 100000</td>\n",
        "      <td> 21</td>\n",
        "      <td> 19050.128945</td>\n",
        "      <td> 0.035153</td>\n",
        "      <td> 780832.313632</td>\n",
        "      <td> 0.024397</td>\n",
        "      <td>...</td>\n",
        "      <td> 0.029663</td>\n",
        "      <td>  14</td>\n",
        "      <td> 4.160368</td>\n",
        "      <td>  30717</td>\n",
        "      <td> 0.396891</td>\n",
        "      <td> 0.007415</td>\n",
        "      <td> 35000</td>\n",
        "      <td> 34983.760563</td>\n",
        "      <td> 27</td>\n",
        "      <td>   7</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>2227 rows \u00d7 21 columns</p>\n",
        "</div>"
       ],
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 167,
       "text": [
        "        id  Price / SF / Month              Space Type: Lease Type:  \\\n",
        "0        1            2.649241                      NaN         NaN   \n",
        "1        2            1.583333                      NaN         NaN   \n",
        "2        3            1.583333                      NaN         NaN   \n",
        "3        4            1.583333                      NaN         NaN   \n",
        "4        5           12.500000                   Anchor         NaN   \n",
        "5        6            1.166667  Commercial/Other (land)         NaN   \n",
        "6        7            1.500000         Community Center         NaN   \n",
        "7        8            1.432209         Community Center         NaN   \n",
        "8        9            2.333333         Community Center         NaN   \n",
        "9       10            2.500000         Community Center         NaN   \n",
        "10      11            2.500000         Community Center         NaN   \n",
        "11      12            2.500000            Creative/Loft         NaN   \n",
        "12      13            1.600000            Creative/Loft         NaN   \n",
        "13      14            2.294118            Creative/Loft         NaN   \n",
        "14      15            3.333333            Creative/Loft         NaN   \n",
        "15      16            7.500000            Creative/Loft         NaN   \n",
        "16      17            7.500000            Creative/Loft         NaN   \n",
        "17      18            7.500000            Creative/Loft         NaN   \n",
        "18      19            7.500000            Creative/Loft         NaN   \n",
        "19      20            2.235294       Free Standing Bldg         NaN   \n",
        "20      21            3.411765       Free Standing Bldg         NaN   \n",
        "21      22            3.750000       Free Standing Bldg         NaN   \n",
        "22      23            2.666667       Free Standing Bldg         NaN   \n",
        "23      24            3.225806       Free Standing Bldg         NaN   \n",
        "24      25            3.333333       Free Standing Bldg         NaN   \n",
        "25      26            1.538462       Free Standing Bldg         NaN   \n",
        "26      27            2.363636       Free Standing Bldg         NaN   \n",
        "27      28            2.916667       Free Standing Bldg         NaN   \n",
        "28      29           11.444266       Free Standing Bldg         NaN   \n",
        "29      30            2.333333       Free Standing Bldg         NaN   \n",
        "...    ...                 ...                      ...         ...   \n",
        "2197  2198            2.500000            Street Retail       Other   \n",
        "2198  2199            3.142857            Street Retail       Other   \n",
        "2199  2200            3.489933            Street Retail       Other   \n",
        "2200  2201            2.428571            Street Retail       Other   \n",
        "2201  2202            2.750000            Street Retail       Other   \n",
        "2202  2203            3.333333            Street Retail       Other   \n",
        "2203  2204            3.500000            Street Retail       Other   \n",
        "2204  2205            6.000000            Street Retail       Other   \n",
        "2205  2206            2.833333            Street Retail       Other   \n",
        "2206  2207            6.444444            Street Retail       Other   \n",
        "2207  2208            5.402010            Street Retail       Other   \n",
        "2208  2209            4.705882            Street Retail       Other   \n",
        "2209  2210            3.625000            Street Retail       Other   \n",
        "2210  2211           10.000000            Street Retail       Other   \n",
        "2211  2212            9.166667            Street Retail       Other   \n",
        "2212  2213            2.916667            Street Retail       Other   \n",
        "2213  2214           38.181818            Street Retail       Other   \n",
        "2214  2215            6.637931            Street Retail       Other   \n",
        "2215  2216           13.888889            Street Retail       Other   \n",
        "2216  2217           10.666667            Street Retail       Other   \n",
        "2217  2218           14.583333            Street Retail       Other   \n",
        "2218  2219           25.000000            Street Retail       Other   \n",
        "2219  2220           27.500000            Street Retail       Other   \n",
        "2220  2221           35.000000            Street Retail       Other   \n",
        "2221  2222            3.333333            Street Retail       Other   \n",
        "2222  2223            3.176471             Strip Center       Other   \n",
        "2223  2224            3.333333             Strip Center       Other   \n",
        "2224  2225            3.750000             Strip Center       Other   \n",
        "2225  2226            0.675371          Vehicle Related       Other   \n",
        "2226  2227            1.250000                Warehouse       Other   \n",
        "\n",
        "      Space Size  Number of transport spots    Population  \\\n",
        "0          11324                         14   6417.318254   \n",
        "1           2275                         22   3902.848712   \n",
        "2           2275                         22   3902.848712   \n",
        "3          17989                         22   3902.848712   \n",
        "4            600                         36  21490.142813   \n",
        "5           2600                          5  11765.526042   \n",
        "6           5500                          0    397.241957   \n",
        "7           1571                         15   1392.411066   \n",
        "8           2000                          7   1880.656756   \n",
        "9           1350                          5   2299.213010   \n",
        "10        100000                         21  19050.128945   \n",
        "11          6000                         26  21819.146142   \n",
        "12          1000                         15   9396.862581   \n",
        "13           850                         47  21359.310595   \n",
        "14          3500                         13  11956.287753   \n",
        "15          2500                         36  12209.379009   \n",
        "16          2500                         36  12209.379009   \n",
        "17          2500                         36  12209.379009   \n",
        "18          2500                         36  12209.379009   \n",
        "19          1700                         11   1079.201017   \n",
        "20          1700                         11   1079.201017   \n",
        "21          3400                         11   1079.201017   \n",
        "22         44852                         25  21131.643318   \n",
        "23           620                         23  13801.142786   \n",
        "24           600                         24  13789.902082   \n",
        "25          2275                         20  11941.303726   \n",
        "26          1100                         20  18082.317925   \n",
        "27         10000                         25  10482.985237   \n",
        "28          4369                         17   4422.607443   \n",
        "29         14500                         30  18871.028437   \n",
        "...          ...                        ...           ...   \n",
        "2197        1000                         22   4836.495197   \n",
        "2198         700                         25  10786.368465   \n",
        "2199        1490                         21   8851.625727   \n",
        "2200        3500                         19  22958.105348   \n",
        "2201        1000                         20  17002.881180   \n",
        "2202         600                         20  16682.356921   \n",
        "2203        1000                         23  20618.457107   \n",
        "2204        2000                         36   1471.814998   \n",
        "2205        6000                         28  19723.427370   \n",
        "2206        1350                         40  15068.972173   \n",
        "2207         995                         39  16668.410392   \n",
        "2208         850                         42  16739.662993   \n",
        "2209         800                         39  17092.284188   \n",
        "2210       15000                         33  14117.380836   \n",
        "2211         600                         44  37331.834049   \n",
        "2212        3800                         23  14494.373637   \n",
        "2213        1100                         30  17366.016458   \n",
        "2214         580                         44  12146.233956   \n",
        "2215        1080                         54  33786.376638   \n",
        "2216        3000                         62  20744.121719   \n",
        "2217        4100                         62  27310.378125   \n",
        "2218        1800                         34  20694.697123   \n",
        "2219         600                         59  12698.096512   \n",
        "2220         200                         59  12698.096512   \n",
        "2221        4500                         26  17032.401244   \n",
        "2222         850                          5   1281.356304   \n",
        "2223         750                          5   1287.888981   \n",
        "2224        2800                         23  13910.284784   \n",
        "2225        2221                         36  17298.932016   \n",
        "2226      100000                         21  19050.128945   \n",
        "\n",
        "      Population change 2013-2010      Land area  \\\n",
        "0                        0.104498  780786.644395   \n",
        "1                        0.041712  646901.202888   \n",
        "2                        0.041712  646901.202888   \n",
        "3                        0.041712  646901.202888   \n",
        "4                       -0.030814  748996.112024   \n",
        "5                       -0.064297  780840.252989   \n",
        "6                       -0.011405  780118.338337   \n",
        "7                       -0.044647  775638.213091   \n",
        "8                        0.023341  717315.011979   \n",
        "9                       -0.061004  775940.748428   \n",
        "10                       0.035153  780832.313632   \n",
        "11                      -0.019197  780827.672986   \n",
        "12                      -0.016277  608539.667689   \n",
        "13                       0.049734  760972.628675   \n",
        "14                       0.035635  671581.693225   \n",
        "15                      -0.012891  516119.628877   \n",
        "16                      -0.012891  516119.628877   \n",
        "17                      -0.012891  516119.628877   \n",
        "18                      -0.012891  516119.628877   \n",
        "19                       0.029399  770178.626994   \n",
        "20                       0.029399  770178.626994   \n",
        "21                       0.029399  770178.626994   \n",
        "22                      -0.028634  780826.286038   \n",
        "23                      -0.000353  780826.098334   \n",
        "24                      -0.019856  730787.241438   \n",
        "25                       0.045930  778959.656775   \n",
        "26                      -0.039515  780835.841519   \n",
        "27                      -0.001402  743597.585861   \n",
        "28                       0.040199  625807.085661   \n",
        "29                       0.045790  779460.786078   \n",
        "...                           ...            ...   \n",
        "2197                    -0.013942  772640.444726   \n",
        "2198                    -0.028927  780803.834365   \n",
        "2199                     0.025442  734792.492326   \n",
        "2200                     0.008241  780808.334019   \n",
        "2201                    -0.028898  780803.939240   \n",
        "2202                    -0.034413  780806.314888   \n",
        "2203                    -0.023904  780829.227932   \n",
        "2204                     0.059209  771264.458437   \n",
        "2205                     0.021015  780833.102203   \n",
        "2206                     0.085663  777163.161147   \n",
        "2207                     0.010416  780836.694825   \n",
        "2208                     0.004533  780837.272847   \n",
        "2209                     0.024514  780837.021295   \n",
        "2210                     0.020214  512653.773047   \n",
        "2211                    -0.081527  773318.828875   \n",
        "2212                    -0.054168  780839.074355   \n",
        "2213                    -0.036745  740715.046865   \n",
        "2214                     0.095393  780194.843653   \n",
        "2215                     0.024436  763517.828275   \n",
        "2216                    -0.055788  780848.558967   \n",
        "2217                     0.019736  780846.127064   \n",
        "2218                    -0.029976  780846.687106   \n",
        "2219                    -0.049986  583347.990085   \n",
        "2220                    -0.049986  583347.990085   \n",
        "2221                     0.045519  776814.291592   \n",
        "2222                     0.010106  530800.998897   \n",
        "2223                     0.010031  531670.106062   \n",
        "2224                     0.007666  780830.279753   \n",
        "2225                    -0.049389  780830.011503   \n",
        "2226                     0.035153  780832.313632   \n",
        "\n",
        "      Density of people living in area                ...                 \\\n",
        "0                             0.008219                ...                  \n",
        "1                             0.006033                ...                  \n",
        "2                             0.006033                ...                  \n",
        "3                             0.006033                ...                  \n",
        "4                             0.028692                ...                  \n",
        "5                             0.015068                ...                  \n",
        "6                             0.000509                ...                  \n",
        "7                             0.001795                ...                  \n",
        "8                             0.002622                ...                  \n",
        "9                             0.002963                ...                  \n",
        "10                            0.024397                ...                  \n",
        "11                            0.027944                ...                  \n",
        "12                            0.015442                ...                  \n",
        "13                            0.028068                ...                  \n",
        "14                            0.017803                ...                  \n",
        "15                            0.023656                ...                  \n",
        "16                            0.023656                ...                  \n",
        "17                            0.023656                ...                  \n",
        "18                            0.023656                ...                  \n",
        "19                            0.001401                ...                  \n",
        "20                            0.001401                ...                  \n",
        "21                            0.001401                ...                  \n",
        "22                            0.027063                ...                  \n",
        "23                            0.017675                ...                  \n",
        "24                            0.018870                ...                  \n",
        "25                            0.015330                ...                  \n",
        "26                            0.023158                ...                  \n",
        "27                            0.014098                ...                  \n",
        "28                            0.007067                ...                  \n",
        "29                            0.024210                ...                  \n",
        "...                                ...                ...                  \n",
        "2197                          0.006260                ...                  \n",
        "2198                          0.013814                ...                  \n",
        "2199                          0.012046                ...                  \n",
        "2200                          0.029403                ...                  \n",
        "2201                          0.021776                ...                  \n",
        "2202                          0.021366                ...                  \n",
        "2203                          0.026406                ...                  \n",
        "2204                          0.001908                ...                  \n",
        "2205                          0.025259                ...                  \n",
        "2206                          0.019390                ...                  \n",
        "2207                          0.021347                ...                  \n",
        "2208                          0.021438                ...                  \n",
        "2209                          0.021890                ...                  \n",
        "2210                          0.027538                ...                  \n",
        "2211                          0.048275                ...                  \n",
        "2212                          0.018563                ...                  \n",
        "2213                          0.023445                ...                  \n",
        "2214                          0.015568                ...                  \n",
        "2215                          0.044251                ...                  \n",
        "2216                          0.026566                ...                  \n",
        "2217                          0.034975                ...                  \n",
        "2218                          0.026503                ...                  \n",
        "2219                          0.021768                ...                  \n",
        "2220                          0.021768                ...                  \n",
        "2221                          0.021926                ...                  \n",
        "2222                          0.002414                ...                  \n",
        "2223                          0.002422                ...                  \n",
        "2224                          0.017815                ...                  \n",
        "2225                          0.022155                ...                  \n",
        "2226                          0.024397                ...                  \n",
        "\n",
        "      Total density (living + working)  Social chat score  Household size  \\\n",
        "0                             0.010115                  7        2.811673   \n",
        "1                             0.008253                  7        2.786308   \n",
        "2                             0.008253                  7        2.786308   \n",
        "3                             0.008253                  7        2.786308   \n",
        "4                             0.077358                 76        2.389655   \n",
        "5                             0.018784                  6        2.971637   \n",
        "6                             0.001035                  0        2.980000   \n",
        "7                             0.006488                  0        2.954644   \n",
        "8                             0.005803                  0        2.861910   \n",
        "9                             0.006006                  1        2.597657   \n",
        "10                            0.029663                 14        4.160368   \n",
        "11                            0.035851                 17        2.126842   \n",
        "12                            0.021221                 15        2.686434   \n",
        "13                            0.035685                 12        2.269170   \n",
        "14                            0.025204                761        2.163809   \n",
        "15                            0.088023                203        1.779194   \n",
        "16                            0.088023                203        1.779194   \n",
        "17                            0.088023                203        1.779194   \n",
        "18                            0.088023                203        1.779194   \n",
        "19                            0.006790                  0        2.836050   \n",
        "20                            0.006790                  0        2.836050   \n",
        "21                            0.006790                  0        2.836050   \n",
        "22                            0.031953                  7        2.842992   \n",
        "23                            0.023155                  4        2.615314   \n",
        "24                            0.026830                 13        2.837321   \n",
        "25                            0.020557                 23        3.069252   \n",
        "26                            0.026399                  3        2.825713   \n",
        "27                            0.020991                 15        2.434116   \n",
        "28                            0.014114                 22        1.880590   \n",
        "29                            0.027196                  9        2.597693   \n",
        "...                                ...                ...             ...   \n",
        "2197                          0.008670                 14        2.694161   \n",
        "2198                          0.016286                 10        2.281428   \n",
        "2199                          0.018236                  5        2.034515   \n",
        "2200                          0.037273                  4        2.178954   \n",
        "2201                          0.023791                  8        3.672644   \n",
        "2202                          0.024165                  4        3.636842   \n",
        "2203                          0.030922                  1        2.775884   \n",
        "2204                          0.026808                 11        2.079127   \n",
        "2205                          0.028168                  7        2.710644   \n",
        "2206                          0.032472                 25        2.311461   \n",
        "2207                          0.026114                 19        2.226733   \n",
        "2208                          0.026406                 22        2.217259   \n",
        "2209                          0.025330                 17        2.452883   \n",
        "2210                          0.039993                 18        3.010305   \n",
        "2211                          0.081350                 26        1.721332   \n",
        "2212                          0.027059                  6        2.781899   \n",
        "2213                          0.051888                 22        2.043480   \n",
        "2214                          0.030731                 34        2.203374   \n",
        "2215                          0.104746                 83        1.811104   \n",
        "2216                          0.142061                118        1.654613   \n",
        "2217                          0.095040                116        1.706837   \n",
        "2218                          0.091475                 85        2.096526   \n",
        "2219                          0.253856                 87        1.888026   \n",
        "2220                          0.253856                 87        1.888026   \n",
        "2221                          0.028209                  5        3.323779   \n",
        "2222                          0.005020                  1        2.700515   \n",
        "2223                          0.005024                  0        2.700169   \n",
        "2224                          0.022761                  5        2.486254   \n",
        "2225                          0.029262                  5        2.161185   \n",
        "2226                          0.029663                 14        4.160368   \n",
        "\n",
        "      Average HH income 2013  Income change 2013-2010  \\\n",
        "0                      64039                 0.008973   \n",
        "1                      77802                -0.069537   \n",
        "2                      77802                -0.069537   \n",
        "3                      77802                -0.069537   \n",
        "4                      48409                 0.294904   \n",
        "5                      48879                 0.052142   \n",
        "6                     106250                -0.025676   \n",
        "7                      82126                 0.064768   \n",
        "8                     101156                 0.006208   \n",
        "9                     118938                 0.110803   \n",
        "10                     30717                 0.396891   \n",
        "11                     56139                 0.157420   \n",
        "12                     17528                 0.035113   \n",
        "13                     36804                 0.108195   \n",
        "14                     89390                 0.018720   \n",
        "15                     88866                 0.322957   \n",
        "16                     88866                 0.322957   \n",
        "17                     88866                 0.322957   \n",
        "18                     88866                 0.322957   \n",
        "19                    101664                -0.042192   \n",
        "20                    101664                -0.042192   \n",
        "21                    101664                -0.042192   \n",
        "22                     23312                 0.086444   \n",
        "23                     29392                -0.047047   \n",
        "24                     20133                 0.065334   \n",
        "25                     43919                 0.190475   \n",
        "26                     42215                 0.109277   \n",
        "27                     47429                -0.098910   \n",
        "28                     89966                 0.227371   \n",
        "29                     42770                 0.092473   \n",
        "...                      ...                      ...   \n",
        "2197                   72409                 0.106724   \n",
        "2198                   64530                 0.217606   \n",
        "2199                   74101                 0.029439   \n",
        "2200                   54060                 0.048396   \n",
        "2201                   45518                 0.045490   \n",
        "2202                   41963                 0.013050   \n",
        "2203                   37827                 0.015762   \n",
        "2204                   80864                 0.110831   \n",
        "2205                   31166                 0.251520   \n",
        "2206                   42802                 0.188671   \n",
        "2207                   47784                 0.103041   \n",
        "2208                   47863                 0.099399   \n",
        "2209                   49383                 0.231231   \n",
        "2210                   29705                 0.141801   \n",
        "2211                  121847                 0.035776   \n",
        "2212                   45211                 0.122909   \n",
        "2213                  177611                -0.039029   \n",
        "2214                   74309                 0.217686   \n",
        "2215                   91547                 0.159497   \n",
        "2216                   71569                 0.052953   \n",
        "2217                  112730                 0.094048   \n",
        "2218                   66295                 0.239750   \n",
        "2219                  124129                 0.096407   \n",
        "2220                  124129                 0.096407   \n",
        "2221                   41701                 0.133925   \n",
        "2222                   67916                -0.115978   \n",
        "2223                   67891                -0.116030   \n",
        "2224                   52680                 0.083109   \n",
        "2225                   41880                 0.260443   \n",
        "2226                   30717                 0.396891   \n",
        "\n",
        "      Change in % of bachelor degrees 2013-2010  \\\n",
        "0                                      0.034373   \n",
        "1                                     -0.001562   \n",
        "2                                     -0.001562   \n",
        "3                                     -0.001562   \n",
        "4                                      0.052086   \n",
        "5                                      0.007275   \n",
        "6                                     -0.023000   \n",
        "7                                      0.026377   \n",
        "8                                      0.026515   \n",
        "9                                     -0.010159   \n",
        "10                                     0.007415   \n",
        "11                                     0.004322   \n",
        "12                                    -0.008365   \n",
        "13                                    -0.000858   \n",
        "14                                     0.018365   \n",
        "15                                     0.037330   \n",
        "16                                     0.037330   \n",
        "17                                     0.037330   \n",
        "18                                     0.037330   \n",
        "19                                    -0.008583   \n",
        "20                                    -0.008583   \n",
        "21                                    -0.008583   \n",
        "22                                     0.006918   \n",
        "23                                     0.005367   \n",
        "24                                    -0.006536   \n",
        "25                                     0.036245   \n",
        "26                                    -0.009887   \n",
        "27                                    -0.024943   \n",
        "28                                    -0.002911   \n",
        "29                                     0.002811   \n",
        "...                                         ...   \n",
        "2197                                   0.055938   \n",
        "2198                                  -0.002812   \n",
        "2199                                   0.023702   \n",
        "2200                                  -0.028343   \n",
        "2201                                  -0.015360   \n",
        "2202                                  -0.014017   \n",
        "2203                                  -0.013291   \n",
        "2204                                  -0.087200   \n",
        "2205                                  -0.010631   \n",
        "2206                                  -0.000674   \n",
        "2207                                   0.026855   \n",
        "2208                                   0.022175   \n",
        "2209                                   0.008012   \n",
        "2210                                   0.005177   \n",
        "2211                                  -0.027832   \n",
        "2212                                  -0.024807   \n",
        "2213                                  -0.033250   \n",
        "2214                                   0.012764   \n",
        "2215                                   0.030231   \n",
        "2216                                  -0.000297   \n",
        "2217                                   0.041521   \n",
        "2218                                   0.037885   \n",
        "2219                                   0.043050   \n",
        "2220                                   0.043050   \n",
        "2221                                  -0.003014   \n",
        "2222                                  -0.014467   \n",
        "2223                                  -0.014471   \n",
        "2224                                   0.036457   \n",
        "2225                                   0.061389   \n",
        "2226                                   0.007415   \n",
        "\n",
        "      Average salary of employees ($ 000s)  \\\n",
        "0                                    43000   \n",
        "1                                    30000   \n",
        "2                                    30000   \n",
        "3                                    30000   \n",
        "4                                    62000   \n",
        "5                                    34000   \n",
        "6                                    40000   \n",
        "7                                    48000   \n",
        "8                                    45000   \n",
        "9                                    52000   \n",
        "10                                   35000   \n",
        "11                                   43000   \n",
        "12                                   55000   \n",
        "13                                   52000   \n",
        "14                                   61000   \n",
        "15                                   70000   \n",
        "16                                   70000   \n",
        "17                                   70000   \n",
        "18                                   70000   \n",
        "19                                   57000   \n",
        "20                                   57000   \n",
        "21                                   57000   \n",
        "22                                   35000   \n",
        "23                                   46000   \n",
        "24                                   42000   \n",
        "25                                   35000   \n",
        "26                                   32000   \n",
        "27                                   43000   \n",
        "28                                   47000   \n",
        "29                                   35000   \n",
        "...                                    ...   \n",
        "2197                                 38000   \n",
        "2198                                 48000   \n",
        "2199                                 52000   \n",
        "2200                                 44000   \n",
        "2201                                 34000   \n",
        "2202                                 32000   \n",
        "2203                                 34000   \n",
        "2204                                 45000   \n",
        "2205                                 35000   \n",
        "2206                                 56000   \n",
        "2207                                 33000   \n",
        "2208                                 33000   \n",
        "2209                                 31000   \n",
        "2210                                 61000   \n",
        "2211                                 65000   \n",
        "2212                                 38000   \n",
        "2213                                 64000   \n",
        "2214                                 33000   \n",
        "2215                                 63000   \n",
        "2216                                 90000   \n",
        "2217                                 64000   \n",
        "2218                                 64000   \n",
        "2219                                 89000   \n",
        "2220                                 89000   \n",
        "2221                                 37000   \n",
        "2222                                 41000   \n",
        "2223                                 41000   \n",
        "2224                                 36000   \n",
        "2225                                 33000   \n",
        "2226                                 35000   \n",
        "\n",
        "      Average salary of employees in new businesses  \\\n",
        "0                                      42220.615385   \n",
        "1                                      36709.000000   \n",
        "2                                      36709.000000   \n",
        "3                                      36709.000000   \n",
        "4                                      52775.447570   \n",
        "5                                      33248.059701   \n",
        "6                                      41656.449438   \n",
        "7                                      56082.077922   \n",
        "8                                      44564.470588   \n",
        "9                                      44762.561798   \n",
        "10                                     34983.760563   \n",
        "11                                     35352.000000   \n",
        "12                                     42160.486957   \n",
        "13                                     45961.124122   \n",
        "14                                     41005.344398   \n",
        "15                                     13088.968624   \n",
        "16                                     13088.968624   \n",
        "17                                     13088.968624   \n",
        "18                                     13088.968624   \n",
        "19                                     61351.535836   \n",
        "20                                     61351.535836   \n",
        "21                                     61351.535836   \n",
        "22                                     28871.294118   \n",
        "23                                     66896.690141   \n",
        "24                                     40930.000000   \n",
        "25                                     25460.090652   \n",
        "26                                     27616.714286   \n",
        "27                                     38803.656307   \n",
        "28                                     39720.201342   \n",
        "29                                     28763.649123   \n",
        "...                                             ...   \n",
        "2197                                   36195.081712   \n",
        "2198                                   37087.632787   \n",
        "2199                                   51245.575758   \n",
        "2200                                   38568.605578   \n",
        "2201                                   30198.204545   \n",
        "2202                                   26303.678571   \n",
        "2203                                   34129.279412   \n",
        "2204                                   49021.349518   \n",
        "2205                                   30532.142132   \n",
        "2206                                   50079.344262   \n",
        "2207                                   26858.500000   \n",
        "2208                                   28396.009615   \n",
        "2209                                   28116.992481   \n",
        "2210                                   48403.464567   \n",
        "2211                                   55621.594684   \n",
        "2212                                   40968.824834   \n",
        "2213                                   69720.198347   \n",
        "2214                                   33778.237368   \n",
        "2215                                   45398.303030   \n",
        "2216                                   54636.322870   \n",
        "2217                                   54374.134078   \n",
        "2218                                   48134.101729   \n",
        "2219                                   70816.452015   \n",
        "2220                                   70816.452015   \n",
        "2221                                   25507.919192   \n",
        "2222                                   31112.857143   \n",
        "2223                                   31112.857143   \n",
        "2224                                   36200.172973   \n",
        "2225                                   33390.756972   \n",
        "2226                                   34983.760563   \n",
        "\n",
        "      % of employees in new companies vs all  \\\n",
        "0                                         12   \n",
        "1                                         12   \n",
        "2                                         12   \n",
        "3                                         12   \n",
        "4                                         23   \n",
        "5                                         21   \n",
        "6                                         28   \n",
        "7                                         39   \n",
        "8                                         17   \n",
        "9                                         21   \n",
        "10                                        27   \n",
        "11                                        34   \n",
        "12                                        33   \n",
        "13                                        23   \n",
        "14                                        34   \n",
        "15                                        55   \n",
        "16                                        55   \n",
        "17                                        55   \n",
        "18                                        55   \n",
        "19                                         8   \n",
        "20                                         8   \n",
        "21                                         8   \n",
        "22                                        24   \n",
        "23                                        62   \n",
        "24                                        11   \n",
        "25                                        27   \n",
        "26                                        31   \n",
        "27                                        25   \n",
        "28                                        27   \n",
        "29                                        34   \n",
        "...                                      ...   \n",
        "2197                                      22   \n",
        "2198                                      30   \n",
        "2199                                      19   \n",
        "2200                                      21   \n",
        "2201                                      25   \n",
        "2202                                      23   \n",
        "2203                                      31   \n",
        "2204                                      61   \n",
        "2205                                      24   \n",
        "2206                                      20   \n",
        "2207                                      25   \n",
        "2208                                      27   \n",
        "2209                                      29   \n",
        "2210                                      28   \n",
        "2211                                      23   \n",
        "2212                                      23   \n",
        "2213                                      13   \n",
        "2214                                      21   \n",
        "2215                                      34   \n",
        "2216                                      16   \n",
        "2217                                      17   \n",
        "2218                                      28   \n",
        "2219                                      16   \n",
        "2220                                      16   \n",
        "2221                                      16   \n",
        "2222                                      21   \n",
        "2223                                      21   \n",
        "2224                                      27   \n",
        "2225                                      38   \n",
        "2226                                      27   \n",
        "\n",
        "      Number of new retail places 2013-2010  \n",
        "0                                         5  \n",
        "1                                         2  \n",
        "2                                         2  \n",
        "3                                         2  \n",
        "4                                       117  \n",
        "5                                         4  \n",
        "6                                         1  \n",
        "7                                        13  \n",
        "8                                         6  \n",
        "9                                         7  \n",
        "10                                        7  \n",
        "11                                       27  \n",
        "12                                        6  \n",
        "13                                       16  \n",
        "14                                       14  \n",
        "15                                       61  \n",
        "16                                       61  \n",
        "17                                       61  \n",
        "18                                       61  \n",
        "19                                        1  \n",
        "20                                        1  \n",
        "21                                        1  \n",
        "22                                       20  \n",
        "23                                       12  \n",
        "24                                        4  \n",
        "25                                       26  \n",
        "26                                       20  \n",
        "27                                       24  \n",
        "28                                       14  \n",
        "29                                        8  \n",
        "...                                     ...  \n",
        "2197                                     14  \n",
        "2198                                     11  \n",
        "2199                                      9  \n",
        "2200                                     21  \n",
        "2201                                     13  \n",
        "2202                                     15  \n",
        "2203                                      9  \n",
        "2204                                     29  \n",
        "2205                                      7  \n",
        "2206                                     17  \n",
        "2207                                     28  \n",
        "2208                                     31  \n",
        "2209                                     11  \n",
        "2210                                     14  \n",
        "2211                                     56  \n",
        "2212                                     21  \n",
        "2213                                     21  \n",
        "2214                                      9  \n",
        "2215                                    139  \n",
        "2216                                    100  \n",
        "2217                                     52  \n",
        "2218                                    113  \n",
        "2219                                    104  \n",
        "2220                                    104  \n",
        "2221                                     25  \n",
        "2222                                      6  \n",
        "2223                                      6  \n",
        "2224                                      7  \n",
        "2225                                     11  \n",
        "2226                                      7  \n",
        "\n",
        "[2227 rows x 21 columns]"
       ]
      }
     ],
     "prompt_number": 167
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "rental = np.array(rental)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 168
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "rental.shape"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 169,
       "text": [
        "(2227, 21)"
       ]
      }
     ],
     "prompt_number": 169
    },
    {
     "cell_type": "heading",
     "level": 5,
     "metadata": {},
     "source": [
      "\u0423\u0431\u0435\u0440\u0435\u043c \u0432\u0441\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u0441 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u043c\u0438"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "l = []\n",
      "m = []\n",
      "import math\n",
      "for i in range(rental.shape[0]):\n",
      "    for j in range(rental.shape[1]):\n",
      "\n",
      "        if type(rental[i,j]) != str:\n",
      "            if math.isnan(rental[i,j]):\n",
      "                m.append(i)\n",
      "            "
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 170
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "rental = np.delete(rental, m, axis = 0)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 171
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "rental.shape"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 172,
       "text": [
        "(1800, 21)"
       ]
      }
     ],
     "prompt_number": 172
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "\u0442\u043e \u0435\u0441\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0441 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u043c\u0438 \u0432 \u0434\u0430\u043d\u043d\u044b\u0445 20%"
     ]
    },
    {
     "cell_type": "heading",
     "level": 5,
     "metadata": {},
     "source": [
      "\u0420\u0430\u0437\u043e\u0431\u044c\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 5 \u0442\u0438\u043f\u043e\u0432 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \"Lease Type\u201d "
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "np.unique(rental[:,3])"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 173,
       "text": [
        "array(['Full Service', 'Industrial Gross', 'Modified Gross',\n",
        "       'Modified Net', 'NNN', 'Other'], dtype=object)"
       ]
      }
     ],
     "prompt_number": 173
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "rental_Full_Service = rental[rental[:,3] == 'Full Service',:]\n",
      "rental_NNN = rental[rental[:,3] == 'NNN',:]\n",
      "rental_Industrial_Gross = rental[rental[:,3] == 'Industrial Gross',:]\n",
      "rental_Modified_Gross = rental[rental[:,3] == 'Modified Gross',:]\n",
      "rental_Modified_Net = rental[rental[:,3] == 'Modified Net',:]\n",
      "rental_Other = rental[rental[:,3] == 'Other',:]"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 174
    },
    {
     "cell_type": "heading",
     "level": 5,
     "metadata": {},
     "source": [
      "\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043d\u0430 \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u0432\u0435\u043a\u0442\u043e\u0440 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0442\u0438\u043f\u0430"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "plt.scatter(list(range(rental_Full_Service.shape[0])),rental_Full_Service[:,1])\n",
      "plt.show()\n",
      "plt.scatter(list(range(rental_NNN.shape[0])),rental_NNN[:,1], c='r')\n",
      "plt.show()\n",
      "\n",
      "plt.scatter(list(range(rental_Industrial_Gross.shape[0])),rental_Industrial_Gross[:,1], c='g')\n",
      "plt.show()\n",
      "plt.scatter(list(range(rental_Modified_Gross.shape[0])),rental_Modified_Gross[:,1], c='y')\n",
      "plt.show()\n",
      "plt.scatter(list(range(rental_Modified_Net.shape[0])),rental_Modified_Net[:,1], c='black')\n",
      "plt.show()\n",
      "plt.scatter(list(range(rental_Other.shape[0])),rental_Other[:,1], c='pink')"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "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\n3lPocYtIvnSXTRERSSztb+RKl6an93Ds2BSLi9Hz4eEZpqdnCz9uESk3lXdyVK1WOXjwTiBK1FnW\n3Hs5bhHJj2r6IiIBUU1fREQSU9IXEQmIkr6ISECU9EVEAqKkLyISECV9EZGAKOmLiARESV9EJCBK\n+iIiAVHSFxEJSCZJ38zOM7OHzOz++PmImc2b2SkzO2pm67OYjoiIpJNVS/8DwAmgfjOdvcC8u18G\nfC1+LiIiOUud9M3sUuA64NNA/SZAO4D6vXxngXeknY6IiKSXRUv/48CHgbMNw0bdfSF+vACMZjAd\nERFJKdWPqJjZ24Gn3P0hM6u0eo+7u5m1vIfy/v37n39cqVSoVFqOQkQkWLVajVqtltn4Ut1P38w+\nArwLeA54IfAS4F7g9UDF3c+Y2UXAA+5+edNndT99EZEO5Xo/fXe/xd03uvtm4Ebg6+7+LuAIS7/K\nPQXcl2Y6Ev0S1sTEbiYmdlOtVvMOR0RKKuvfyK033W8D7jaz9wJPADdkPJ2gVKtVdu6cYnHxdgCO\nHZvi8OFZ/QSiiHRMP5dYAhMTu5mf38HSwdMs4+NHOHr0njzDEpEc6OcSRUQkMSX9Epie3sPw8AzR\nJQ+zDA/PMD29J++wpEfUfyO9pKRfApOTkxw+HJV0xsePqJ6fo14n5Hr/zfz8Dubnd7Bz55QSf0La\nWSbk7rn8RZMWKY+5uTkfHh51OORwyIeHR31ubi7TaYyP74rH7/HfIR8f35XpNAZRP5ZNUcS5s+vc\nm/XZOyID6+DBO+MzqKIO9cXFaJiOuvKnZZOcyjtSCDo0j6j/RnouzWFCmj9U3pFYWQ7N+xXn3Nyc\nj4/v8vHxXYWcD0VUlnUoC6Qs7+g8fcldma5DqFarHDx4JxC1ylU+KI5Qlk3a8/RV0xfpwOTk5MAm\nk7LTsklGSV9yNz29h2PHplhcjJ5HdezZlT8kIl1ReUcKIZRDc5G00pZ3lPRFREpE996Rjun0yMGj\nZSpJqaUfmObbNA8Pz+i2DiWnZRoWlXekI2U6PVKS0TINi8o7IiKSmE7ZDEi1WuXppxcYGvprzp6N\nhun0yPLTKa/SCZV3ArG87nucoaFDXHXVH/DRj+5T7XcA6JTXcKimL4mo7isyGFTTFxGRxJT0A6Fb\n9ko7Osc/LCrvBER1X2mmc/zLRzV9Eema+nrKRzV9ERFJTElfekJ14nIYxL4erXsrU3lHMqc6cbkM\n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\nJf0eaF26qSe45npq/X9zsl9ayZrvF7JSnbWbK0KzTPrndhY2Jvnl56wXpRNt5SOTZCWETpN7kr6e\nlRJX0s7hTqax2nrQriS50k4redJv1chpbv2vfAZTL0o158ZX/jJQYZM+sB04CTwKzLR4vVfzJLVz\nE981vmbN77ZoyUSvrVt3UUPLf3kLs5MVq3XJaPVkmmV5p/VG0rqFlFcnWncdpp2XEHrZsdyLBLfa\nOFut16uto6uNs1VLut7IWeo7aW4YtZ5+L9anbrepIitk0gfOAx4DNgHnAw8DVzS9p3dzJaVWK99S\nqzZdPTXZdFdvlTQnvqw6cjs52sijEy3JNNuVMDq9l0zScknjODutl2dda15pnN0m1TQ18/prY2Nb\nfcuW16y44+1F0u/26LnIipr03wTMNTzfC+xtek+v5klqrRJL60vBkx/ydz7d9vXHXifbTuq+WXzn\nrBNxfbxp51Fnrdzo9VZ9B72+cVlW36dfMax+lJZtfN30kxVZUZP+nwKfanh+E/DJpvf0ap5kol0r\nuBedTatNt1k/yir9SBDdTKPfLelOW85jY1sTndOfl14cXWSpl/EV/bsnVdSkv7vsSb/I+lVL7/VG\n0suaeT+0i791x3Jvl5WEI23S79UPo/8E2NjwfCNwuvlN+/fvf/5xpVKhUqn0KJzBMj29h2PHplhc\njJ4PD88wPT2b+XSK+IPpk5OTHD482/CD18l/KDtr7ZZD43ybmNidS2wyOGq1GrVaLbsRptljtPsD\n1gA/IurIXUvJOnLLYBAOVYvUau9Wkk7Osn9HKRZStvQtGkf2zOxtwCeIzuT5jLt/tOl179W0pTyq\n1WpDq31P4Y4sshDCd5T+MTPc3br+fF6JV0lfRKRzaZP+UJbBiIhIsSnpi4gERElfRCQgSvoiIgFR\n0hcRCYiSvohIQJT0RUQCoqQvIhIQJX0RkYAo6YuIBERJX0QkIEr6IiIBUdIXEQmIkr6ISECU9EVE\nAqKkLyISECV9EZGAKOmLiARESV9EJCBK+iIiAVHSFxEJiJK+iEhAlPRFRAKipC8iEhAlfRGRgCjp\ni4gERElfRCQgSvoiIgHpOumb2d+b2Q/M7Htmdq+ZXdjw2j4ze9TMTprZRDahiohIWmla+keBV7v7\nVcApYB+AmV0JvBO4EtgO3GFmpT2iqNVqeYeQiOLMluLMVhniLEOMWeg6Gbv7vLufjZ8+CFwaP74e\nuMvdn3X3J4DHgDekijJHZVkRFGe2FGe2yhBnGWLMQlYt8PcAX4kfXwycbnjtNHBJRtMREZEU1qz0\nopnNAxtavHSLu98fv+dvgd+6+xdXGJV3H6KIiGTF3LvPx2b258BfAm9191/Hw/YCuPtt8fM54FZ3\nf7Dps9oRiIh0wd2t2892nfTNbDtwENjm7k83DL8S+CJRHf8S4KvA73uavYuIiGRixfLOKj4JrAXm\nzQzgW+7+Pnc/YWZ3AyeA54D3KeGLiBRDqvKOiIiUS9/Pny/TRV1mtj2O5VEzm8k7njoz22hmD5jZ\nI2b2fTN7fzx8xMzmzeyUmR01s/UFiPU8M3vIzOod/0WMcb2ZfTleL0+Y2RsLGue+eJkfN7MvmtkL\nihCnmX3WzBbM7HjDsLZx5bWdt4mzcPmoVZwNr02b2VkzG+k6Tnfv6x8wDgzFj28DbosfXwk8DJwP\nbCI6v3+o3/E1xHleHMOmOKaHgSvyiqcptg3Aa+PH64AfAlcAHwNujofP1OdtzrH+DfAF4Ej8vIgx\nzgLviR+vAS4sWpzxevg48IL4+ZeAqSLECbwFGAOONwxrGVee23mbOAuXj1rFGQ/fCMwB/wmMdBtn\n31v6Xp6Lut4APObuT7j7s8C/xjHmzt3PuPvD8eP/BX5A1Gm+gyiBEf9/Rz4RRszsUuA64NNA/WyD\nosV4IfAWd/8sgLs/5+7/TcHiBP4HeBZ4kZmtAV4E/JQCxOnu3wB+2TS4XVy5beet4ixiPmozPwH+\nAbi5aVjHceZ9e4QiX9R1CfBkw/O842nJzDYRtQoeBEbdfSF+aQEYzSmsuo8DHwbONgwrWoybgZ+Z\n2efM7Ltm9ikzezEFi9Pdf0F0ttyPiZL9M+4+T8HibNAurqJt540Km4/M7HrgtLv/R9NLHcfZk6Qf\n1/KOt/j7k4b3FP2irsL3cJvZOuAe4APu/qvG1zw69svtO5jZ24Gn3P0hllr5y+QdY2wNcDVwh7tf\nDfwfsLfxDUWI08y2AB8kOoS/GFhnZjc1vqcIcbaSIK7cYy5yPjKzFwG3ALc2Dl7hIyvGmeaUzfZT\ndB9f6fX4oq7rgLc2DP4JUc2q7tJ4WF6a49nI8j1qrszsfKKE/3l3vy8evGBmG9z9jJldBDyVX4T8\nEbDDzK4DXgi8xMw+X7AYIVqmp939O/HzLxPdPPBMweJ8HfBNd/85gJndC7yJ4sVZ1245F207L0M+\n2kK0s/9efHr8pcC/m9kb6SLOPM7e2U50yH+9x1fxxo4AN5rZWjPbDLwK+Ha/42vwb8CrzGyTma0l\nunPokRzjeZ5FS/4zwAl3/0TDS0eIOveI/9/X/Nl+cfdb3H2ju28GbgS+7u7vKlKMEPWPAE+a2WXx\noGuBR4D7KVCcwEngGjMbjpf/tUTXwhQtzrp2y7lQ23kZ8pG7H3f3UXffHG9Pp4Gr4/JZ53H2oze6\nqQf6UeC/gIfivzsaXruFqCPiJDDZ79haxPo2ojNjHgP25R1PQ1xvJqqTP9wwH7cDI0RXQJ8iuvX1\n+rxjjePdxtLZO4WLEbgK+A7wPeBeorN3ihjnzUQ7pONEnaPnFyFO4C6ifobfEvWDvXuluPLazlvE\n+Z4i5qOGOH9Tn59Nrz9OfPZON3Hq4iwRkYDkffaOiIj0kZK+iEhAlPRFRAKipC8iEhAlfRGRgCjp\ni4gERElfRCQgSvoiIgH5f7IhAC0HNyoVAAAAAElFTkSuQmCC\n",
       "text": [
        "<matplotlib.figure.Figure at 0x16b80b278>"
       ]
      },
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<matplotlib.figure.Figure at 0x16d9c5550>"
       ]
      },
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "iVBORw0KGgoAAAANSUhEUgAAAWgAAAEACAYAAACeQuziAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\nAAALEgAACxIB0t1+/AAADOBJREFUeJzt3W+IZXUdx/HPx50VRyt9UJTlggYJJcUmJVJCR2ruiEzF\nQNEGFfigR7WJbFEJ4fQkCRo0NoKwkv7RBsZEbn/OTOapjcCKdsoc7S/CWqaS0T8nGNtvD+buOu7u\n3HuunjvnO2feL1j23nvOnP0ednlz9rfn7DgiBADI56y2BwAAnBmBBoCkCDQAJEWgASApAg0ASRFo\nAEhqaKBtX2D7Dtv3216xfeVWDAYAO91EjX0+Lem7EfE22xOSzhvzTAAASR70oIrt8yUdjYiXbt1I\nAABp+BLHJZIes3277V/avs32uVsxGADsdMMCPSHpckmfjYjLJf1H0kfGPhUAYOga9EOSHoqIn/ff\n36FTAm2b/8wDAJ6BiPCg7QOvoCPir5KO2b60/9GbJN13hv06++Omm25qfQbOj/PbiefX5XOLqHdd\nW+cujv2Svmb7bEl/lHRdrSMDAJ6VoYGOiF9Jeu0WzAIA2IAnCYcoiqLtEcaK89veunx+XT63ugbe\nB13rAHY822MAwE5jW/Fs/pEQANAeAg0ASRFoAEiKQANAUgQaAJIi0ACQFIEGgKQINAAkRaABICkC\nDQBJEWgASIpAA0BSBBoAkiLQAJAUgQaApAg0ACRFoAEgKQINAEkRaABIikADQFIEGgCSItAAkBSB\nBoCkCDQAJEWgASApAg0ASU3U2cn2g5L+Kel/ktYi4opxDgUAqBloSSGpiIjHxzkMAOApoyxxeGxT\nAEBfWZbqzfTUm+mpLMu2x2mVI2L4TvafJP1D60scn4uI2zZsizrHAIBhyrLU7L5ZrRarkqTJalIL\nhxY0PT3d8mTNs62IGHjhWzfQF0bEw7ZfIGlJ0v6IONLfRqABNKI309PS7iVpb/+DZWlqbUqLhxdb\nnWsc6gS61hp0RDzc//kx2wuSrpB05MT2ubm5k/sWRaGiKJ7BuADQXVVVqaqqkb5m6BW07XMl7YqI\nf9k+T9KipI9HxGJ/O1fQABrBEscp+9QI9CWSFvpvJyR9LSJu3rCdQANoTFmWmj84L0k6sP9AJ+Ms\nNbgGPeQXIdAAMKI6geZJQgBIikADQFIEGgCSItAAkBSBBoCkCDQAJEWgASApAg0ASRFoAEiKQANA\nUgQaAJIi0ACQFIEGgKQINAAkRaABICkCDQBJEWgASIpAA0BSBBoAkiLQAJAUgQaApAg0ACRFoAEg\nKQINAEkRaABIikADQFIEGgCSItAAkBSBBoCkagXa9i7bR23fOe6BAADr6l5BXy9pRVKMcRYAwAZD\nA237IknXSvq8JI99IgCApHpX0LdI+pCk42OeBQCwwcSgjbZnJD0aEUdtF5vtNzc3d/J1URQqik13\nBYAdqaoqVVU10tc4YvNlZdufkPRuSU9KOkfS8yR9MyLes2GfGHQMAMDpbCsiBi4bDwz0KQd7g6QP\nRsSbT/mcQAPAiOoEetT7oCkxAGyR2lfQmx6AK2gAGNk4rqABAFuEQANAUgQaAJIi0ACQFIEGgKQI\nNAAkRaABICkCDQBJEWgASIpAA0BSBBoAkiLQAJAUgQaApAg0ACRFoAEgKQINAEkRaABIikADQFIE\nGgCSItAAkBSBBoCkCDQAJEWgASApAg0ASRFoAEiKQANAUgQaAJIi0ACQ1NBA2z7H9j22l22v2L55\nKwYDgJ1uYtgOEfFf21dHxBO2JyT9xPZVEfGTLZgPAHasWkscEfFE/+XZknZJenxsEwEAJNUMtO2z\nbC9LekTS3RGxMt6xAABDlzgkKSKOS9pr+3xJpe0iIqoT2+fm5k7uWxSFiqJodkoA2OaqqlJVVSN9\njSNitC+wPyZpNSI+1X8fox4DAHY624oID9qnzl0cz7d9Qf/1pKQpSUebGREAsJk6SxwXSvqS7bO0\nHvSvRMRd4x0LADDyEsdpB2CJAwBG1sgSBwCgHQQaAJIi0ACQFIEGgKQINAAkRaDRSWVZqjfTU2+m\np7Is2x4HeEa4zQ6dU5alZvfNarVYlSRNVpNaOLSg6enplicDnlLnNjsCjc7pzfS0tHtJ2tv/YFma\nWpvS4uHFVucCNuI+aADYxgg0OufA/gOarCalZUnL60scB/YfaHssYGQscaCTyrLU/MF5SevBZv0Z\n2bAGDQBJsQYNANsYgQaApAg0ACRFoAEgKQINAEkRaABIikADQFIEGgCSItAAkBSBBoCkCDQAJEWg\nASApAg0ASRFoAEiKQANAUgQaAJIaGmjbe2zfbfs+27+x/YGtGAwAdro6V9Brkm6IiMskXSnpfbZf\nPt6x2leWpXozPfVmeirLsu1xGtf18wO6YORveWX7W5IORsRd/fed+5ZXZVlqdt+sVotVSevfdHTh\n0EJnvq9d188P2A4a/56Eti+W9CNJl0XEv/ufdS7QvZmelnYvSXv7HyxLU2tTWjy82OpcTen6+QHb\nQZ1AT4xwsOdIukPS9SfifMLc3NzJ10VRqCiKkQYFgK6rqkpVVY30NbWuoG3vlnRY0vci4tZTtnXu\nCrrrSwBdPz9gO2hkicO2JX1J0t8i4oYzbO9coKX1iM0fnJckHdh/oHPx6vr5Adk1FeirJP1Y0q8l\nndj5oxHx/f72TgYaAMap8X8k3OQXIdAAMKI6geZJQgBIikADQFIEGgCSItAAkBSBBoCkCDQAJEWg\nASApAg0ASRFoAEiKQANAUgQaAJIi0ACQFIEGgKQINAAkRaABICkCDQBJEWgASIpAA0BSBBoAkiLQ\nAJAUgQaApAg0ACRFoAEgKQINAEkRaABIikADQFIEGgCSItAAkNTQQNv+ou1HbN+7FQMBANbVuYK+\nXdI14x4EAPB0QwMdEUck/X0LZgFQU1mW6s301JvpqSzLtsfBmLAGDWwzZVlqdt+slnYvaWn3kmb3\nzRLpjiLQwDYzf3Beq8WqtFfSXmm1WNX8wfm2x8IYTDRxkLm5uZOvi6JQURRNHBYAOqOqKlVVNdLX\nOCKG72RfLOnOiHjlGbZFnWMAaMaJJY7VYlWSNFlNauHQgqanp1ueDKOwrYjwoH3q3Gb3dUk/lXSp\n7WO2r2tqQACjm56e1sKhBU2tTWlqbYo4d1itK+iBB+AKGgBG1sgVNACgHQQaAJIi0ACQFIEGgKQI\nNAAkRaABICkCDQBJEWgASIpAA0BSBBoAkiLQAJAUgQaApAg0ACRFoAEgKQINAEkRaABIikADQFIE\nGgCSItAAkBSBBoCkCDQAJEWgASApAg0ASRFoAEiKQANAUgQaAJIi0ACQFIEGgKSGBtr2NbYfsP17\n2x/eiqEAAEMCbXuXpM9IukbSKyS90/bLt2KwLKqqanuEseL8trcun1+Xz62uYVfQV0j6Q0Q8GBFr\nkg5Jeuv4x8qj639IOL/trcvn1+Vzq2tYoF8i6diG9w/1PwMAjNmwQMeWTAEAOI0jNm+w7SslzUXE\nNf33H5V0PCI+uWEfIg4Az0BEeND2YYGekPRbSW+U9BdJP5P0zoi4v8khAQCnmxi0MSKetP1+SaWk\nXZK+QJwBYGsMvIIGALSnkScJbb/d9n22/2f78iaOmUGXH9Kx/UXbj9i+t+1ZxsH2Htt39/9c/sb2\nB9qeqSm2z7F9j+1l2yu2b257pnGwvcv2Udt3tj1L02w/aPvX/fP72Wb7NfWo972SZiX9uKHjtW4H\nPKRzu9bPravWJN0QEZdJulLS+7ry+xcR/5V0dUTslfQqSVfbvqrlscbhekkr6ubdZCGpiIhXR8QV\nm+3USKAj4oGI+F0Tx0qk0w/pRMQRSX9ve45xiYi/RsRy//W/Jd0v6cXtTtWciHii//Jsrf/70OMt\njtM42xdJulbS5yUNvNNhGxt6XvxnSZvjIZ2OsH2xpFdLuqfdSZpj+yzby5IekXR3RKy0PVPDbpH0\nIUnH2x5kTELSD2z/wvZ7N9tp4F0cG9lekvSiM2y6MSI6t0akbv61asex/RxJd0i6vn8l3QkRcVzS\nXtvnSyptFxFRtTxWI2zPSHo0Io7aLtqeZ0xeHxEP236BpCXbD/T/Vvs0tQMdEVONjpffnyXt2fB+\nj9avorFN2N4t6ZuSvhoR32p7nnGIiH/Y/o6k10iqWh6nKa+T9Bbb10o6R9LzbH85It7T8lyNiYiH\n+z8/ZntB60uqpwV6HEscXVkv+oWkl9m+2PbZkt4h6dstz4SabFvSFyStRMStbc/TJNvPt31B//Wk\npClJR9udqjkRcWNE7ImISyTtk/TDLsXZ9rm2n9t/fZ6kntZvtDhNU7fZzdo+pvV/Lf+O7e81cdw2\nRcSTkk48pLMi6RtdekjH9tcl/VTSpbaP2b6u7Zka9npJ79L6HQ5H+z+6ctfKhZJ+2F+DvkfSnRFx\nV8szjVPXlhtfKOnIht+/wxGxeKYdeVAFAJLiLg4ASIpAA0BSBBoAkiLQAJAUgQaApAg0ACRFoAEg\nKQINAEn9H+qyvZY8aImwAAAAAElFTkSuQmCC\n",
       "text": [
        "<matplotlib.figure.Figure at 0x16ddf5550>"
       ]
      },
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<matplotlib.figure.Figure at 0x17217dc50>"
       ]
      },
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "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\nwhrHfjDE0wAAAABJRU5ErkJggg==\n",
       "text": [
        "<matplotlib.figure.Figure at 0x172199710>"
       ]
      },
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 303,
       "text": [
        "<matplotlib.collections.PathCollection at 0x17239c128>"
       ]
      },
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "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\nAAAASUVORK5CYII=\n",
       "text": [
        "<matplotlib.figure.Figure at 0x1722f0cf8>"
       ]
      }
     ],
     "prompt_number": 303
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "\u0412\u0438\u0434\u043d\u043e \u0447\u0442\u043e \u0432 \u0433\u0440\u0443\u043f\u043f\u0435 Industrial_Gross \u0432\u0441\u0435\u0433\u043e \u043f\u044f\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043d\u0435\u0442 \u0441\u043c\u044b\u0441\u043b\u0430 \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u0435\u0435.\n",
      "\u0412\u0438\u0434\u043d\u043e, \u0447\u0442\u043e \u043f\u043e\u0447\u0442\u0438 \u0432\u0441\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u043b\u0435\u0436\u0430\u0442 \u0432 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u0435 \u043e\u0442 0 \u0434\u043e 30"
     ]
    },
    {
     "cell_type": "heading",
     "level": 5,
     "metadata": {},
     "source": [
      "\u041f\u043e\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043a\u0430\u043a \u043a\u043e\u0440\u0435\u043b\u0438\u0440\u0443\u044e\u0442 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 \u043c\u0435\u0436\u0434\u0443 \u0441\u043e\u0431\u043e\u0439"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "data = np.hstack((rental[:,:2],rental[:,5:22]))\n",
      "data = data.astype(float)\n",
      "C = np.corrcoef(data.transpose())\n",
      "import PIL.Image\n",
      "import matplotlib.pyplot as plt\n",
      "im = PIL.Image.fromarray(plt.cm.gist_earth(C,  bytes=True)).show()"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 332
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "\u0442\u0430\u043a \u0436\u0435 \u043f\u0440\u043e\u0431\u043e\u0432\u0430\u043b\u0430 \u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043a\u043e\u0440\u0440\u0435\u043b\u044f\u0446\u0438\u044e \u043f\u043e \u043a\u0430\u0436\u0434\u043e\u0439 \u0433\u0440\u0443\u043f\u043f\u0435 \u0438\u0437 'Lease Type', \u043d\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0431\u044b\u043b \u043f\u043e\u0447\u0442\u0438 \u0442\u043e\u0442 \u0436\u0435"
     ]
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "\u041f\u0440\u0438\u043c\u0435\u043d\u0438\u043c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f \u043a \u0434\u0430\u043d\u043d\u044b\u043c"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "\u043e\u0446\u0435\u043d\u0438\u043c \u043a\u0430\u043a\u0443\u044e \u0442\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u043f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0434\u0430\u0435\u0442 \u043a\u043e\u043d\u0441\u0442\u0430\u043d\u0442\u0430"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "res = np.ones(test.shape[0])*5\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean(np.abs(res - test[:,1])))\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ',np.mean((res - test[:,1])**2))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  3.724496110591909\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  44.938816992684934\n"
       ]
      }
     ],
     "prompt_number": 257
    },
    {
     "cell_type": "heading",
     "level": 4,
     "metadata": {},
     "source": [
      "RandomForest"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0433\u0440\u0443\u043f\u043f\u044b \u0438\u0437 Lease Type \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "l = np.random.choice(1800, size = 800, replace=False)\n",
      "m = []\n",
      "for i in range(1800):\n",
      "    if i not in l:\n",
      "        m.append(i)\n",
      "        \n",
      "train = rental[m]\n",
      "test = rental[l]"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 233
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "RES = 5*np.ones((test.shape[0]))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 234
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "train_Full_Service = train[train[:,3] == 'Full Service',:]\n",
      "train_NNN = train[train[:,3] == 'NNN',:]\n",
      "train_Industrial_Gross = train[train[:,3] == 'Industrial Gross',:]\n",
      "train_Modified_Gross = train[train[:,3] == 'Modified Gross',:]\n",
      "train_Modified_Net = train[train[:,3] == 'Modified Net',:]\n",
      "train_Other = train[train[:,3] == 'Other',:]\n",
      "\n",
      "test_Full_Service = test[test[:,3] == 'Full Service',:]\n",
      "test_NNN = test[test[:,3] == 'NNN',:]\n",
      "test_Industrial_Gross = test[test[:,3] == 'Industrial Gross',:]\n",
      "test_Modified_Gross = test[test[:,3] == 'Modified Gross',:]\n",
      "test_Modified_Net = test[test[:,3] == 'Modified Net',:]\n",
      "test_Other = test[test[:,3] == 'Other',:]"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 235
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import sklearn\n",
      "from sklearn import ensemble\n",
      "clf = sklearn.ensemble.RandomForestRegressor(n_estimators = 10000)\n",
      "#rental_Full_Service_2 = rental_Full_Service[rental_Full_Service[:rental_Full_Service.shape[0]/2,1]<40]\n",
      "clf.fit(train_Full_Service[:,4:], train_Full_Service[:,1])\n",
      "res = clf.predict(test_Full_Service[:,4:])\n",
      "\n",
      "RES[test[:,3] == 'Full Service'] = res\n",
      "\n",
      "print('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f:', train_Full_Service.shape[0])\n",
      "print('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f:', test_Full_Service.shape[0])\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean(np.abs(res - test_Full_Service[:,1])))\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean((res - test_Full_Service[:,1])**2))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f: 69\n",
        "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f: 49\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  7.861440797245017\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  169.00008661111525\n"
       ]
      }
     ],
     "prompt_number": 236
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import sklearn\n",
      "from sklearn import ensemble\n",
      "clf = sklearn.ensemble.RandomForestRegressor(n_estimators = 10000)\n",
      "clf.fit(train_Other[:,4:], train_Other[:,1])\n",
      "res = clf.predict(test_Other[:,4:])\n",
      "\n",
      "RES[test[:,3] == 'Other'] = res\n",
      "\n",
      "print('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f:', train_Other.shape[0])\n",
      "print('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f:', test_Other.shape[0])\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean(np.abs(res - test_Other[:,1])))\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean((res - test_Other[:,1])**2))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f: 144\n",
        "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f: 103\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  3.345402385717892\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  73.49968028307912\n"
       ]
      }
     ],
     "prompt_number": 237
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import sklearn\n",
      "from sklearn import ensemble\n",
      "clf = sklearn.ensemble.RandomForestRegressor(n_estimators = 10000)\n",
      "clf.fit(train_NNN[:,4:], train_NNN[:,1])\n",
      "res = clf.predict(test_NNN[:,4:])\n",
      "\n",
      "RES[test[:,3] =='NNN'] = res\n",
      "\n",
      "print('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f:', train_NNN.shape[0])\n",
      "print('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f:', test_NNN.shape[0])\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean(np.abs(res - test_NNN[:,1])))\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean((res - test_NNN[:,1])**2))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f: 282\n",
        "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f: 256\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  1.6981627329697184\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  10.79438255312034\n"
       ]
      }
     ],
     "prompt_number": 238
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import sklearn\n",
      "from sklearn import ensemble\n",
      "clf = sklearn.ensemble.RandomForestRegressor(n_estimators = 10000)\n",
      "clf.fit(train_Modified_Gross[:,4:], train_Modified_Gross[:,1])\n",
      "res = clf.predict(test_Modified_Gross[:,4:])\n",
      "\n",
      "RES[test[:,3] == 'Modified Gross'] = res\n",
      "\n",
      "print('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f:', train_Modified_Gross.shape[0])\n",
      "print('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f:', test_Modified_Gross.shape[0])\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean(np.abs(res - test_Modified_Gross[:,1])))\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean((res - test_Modified_Gross[:,1])**2))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f: 396\n",
        "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f: 293\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  2.1789531090276135\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  16.322922065191122\n"
       ]
      }
     ],
     "prompt_number": 239
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import sklearn\n",
      "from sklearn import ensemble\n",
      "clf = sklearn.ensemble.RandomForestRegressor(n_estimators = 10000)\n",
      "clf.fit(train_Modified_Net[:,4:], train_Modified_Net[:,1])\n",
      "res = clf.predict(test_Modified_Net[:,4:])\n",
      "\n",
      "RES[test[:,3] =='Modified Net'] = res\n",
      "\n",
      "print('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f:', train_Modified_Net.shape[0])\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean(np.abs(res - test_Modified_Net[:,1])))\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ',np.mean((res - test_Modified_Net[:,1])**2))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f: 106\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  1.7172477342444559\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  6.253894032276086\n"
       ]
      }
     ],
     "prompt_number": 240
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "print('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f:', train.shape[0])\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean(np.abs(RES - test[:,1])))\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean((RES - test[:,1])**2))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f: 1000\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  2.483153744501249\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  30.18634641616549\n"
       ]
      }
     ],
     "prompt_number": 241
    },
    {
     "cell_type": "heading",
     "level": 6,
     "metadata": {},
     "source": [
      "\u041f\u0440\u0438\u043c\u0435\u043d\u0438\u043c \u043a\u043e \u0432\u0441\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import sklearn\n",
      "from sklearn import ensemble\n",
      "clf = sklearn.ensemble.RandomForestRegressor(n_estimators = 10000)\n",
      "#rental_2 = rental[rental[:rental.shape[0]/2,1]<40]\n",
      "#clf.fit(rental_2[:,4:], rental_2[:,1])\n",
      "clf.fit(train[:,4:], train[:,1])\n",
      "res = clf.predict(test[:,4:])\n",
      "\n",
      "print('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f:', train.shape[0])\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean(np.abs(res - test[:,1])))\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ',np.mean((res - test[:,1])**2))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f: 1000\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  2.3417087960308027\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  25.98763845941539\n"
       ]
      }
     ],
     "prompt_number": 268
    },
    {
     "cell_type": "heading",
     "level": 5,
     "metadata": {},
     "source": [
      "\u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0432\u044b\u0431\u0440\u043e\u0441\u044b \u0438\u0437 \u0432\u0441\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438. \u0411\u0443\u0434\u0435\u043c \u0441\u0447\u0438\u0442\u0430\u0442\u044c \u0432\u044b\u0431\u0440\u043e\u0441\u0430\u043c\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u0438\u0437 \u043e\u0431\u0443\u0447\u0430\u044e\u0449\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0438 \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0446\u0435\u043b\u0435\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u0435\u0442 35"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import sklearn\n",
      "from sklearn import ensemble\n",
      "clf = sklearn.ensemble.RandomForestRegressor(n_estimators = 10000)\n",
      "#rental_2 = rental[rental[:rental.shape[0]/2,1]<40]\n",
      "#clf.fit(rental_2[:,4:], rental_2[:,1])\n",
      "clf.fit(train[train[:, 1]<35, 4:], train[train[:, 1]<35,1])\n",
      "res = clf.predict(test[:, 4:])\n",
      "answer_RF = res\n",
      "print('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f:', train[train[:,1]<35].shape[0])\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean(np.abs(res - test[:,1])))\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean((res - test[:,1])**2))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f: 987\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  2.128352852352441\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  21.656562932690377\n"
       ]
      }
     ],
     "prompt_number": 297
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "\u0442\u0430\u043a \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u043e\u0441\u044c \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0443\u043b\u0443\u0447\u0448\u0438\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442"
     ]
    },
    {
     "cell_type": "heading",
     "level": 5,
     "metadata": {},
     "source": [
      "\u0412 \u0434\u0430\u043d\u043d\u044b\u0445 \u043c\u043e\u0434\u0435\u043b\u044f\u0445 \u043d\u0438\u043a\u0430\u043a \u043d\u0435 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u043b\u0441\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a 'Space Type' \u0438\u0441\u0441\u043b\u0435\u0434\u0443\u0435\u043c \u043a\u0430\u043a \u0434\u0430\u043d\u043d\u044b\u0435 \u0437\u0430\u0432\u0438\u0441\u044f\u0442 \u043e\u0442 \u043d\u0435\u0433\u043e"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "Type = np.unique(rental[:,2])"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 245
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "Type"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 246,
       "text": [
        "array(['Anchor', 'Community Center', 'Creative/Loft', 'Flex Space',\n",
        "       'Free Standing Bldg', 'Industrial', 'Medical Office',\n",
        "       'Neighborhood Center', 'Office', 'Office Building',\n",
        "       'Office Showroom', 'Office-R&D', 'Other', 'Outlet Center',\n",
        "       'Power Center', 'Regional Center/Mall', 'Restaurant', 'Retail',\n",
        "       'Retail (Other)', 'Retail Pad', 'Specialty Center', 'Street Retail',\n",
        "       'Strip Center', 'Super Regional Center', 'Theme/Festival Center',\n",
        "       'Vehicle Related', 'Warehouse'], dtype=object)"
       ]
      }
     ],
     "prompt_number": 246
    },
    {
     "cell_type": "heading",
     "level": 5,
     "metadata": {},
     "source": [
      "\u041e\u0441\u0442\u0430\u0432\u0438\u043c \u0433\u0440\u0430\u0444\u0438\u043a\u0438 \u0434\u043b\u044f \u0442\u0435\u0445 \u0442\u0438\u043f\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0432 \u0432\u044b\u0431\u043e\u0440\u043a\u0435 \u0431\u043e\u043b\u044c\u0448\u0435 20 "
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "plt.scatter(list(range(rental[rental[:,2] == Type[9]].shape[0])),rental[rental[:,2] == Type[9],1])"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 347,
       "text": [
        "<matplotlib.collections.PathCollection at 0x186fd8b38>"
       ]
      },
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "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\nNKv7/XsoxQAAAABJRU5ErkJggg==\n",
       "text": [
        "<matplotlib.figure.Figure at 0x186f3b4e0>"
       ]
      }
     ],
     "prompt_number": 347
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "plt.scatter(list(range(rental[rental[:,2] == Type[16]].shape[0])),rental[rental[:,2] == Type[16],1])\n"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 354,
       "text": [
        "<matplotlib.collections.PathCollection at 0x196f9a0b8>"
       ]
      },
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<matplotlib.figure.Figure at 0x196efd6d8>"
       ]
      }
     ],
     "prompt_number": 354
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "plt.scatter(list(range(rental[rental[:,2] == Type[17]].shape[0])),rental[rental[:,2] == Type[17],1])"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 355,
       "text": [
        "<matplotlib.collections.PathCollection at 0x19705e7f0>"
       ]
      },
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<matplotlib.figure.Figure at 0x196f15358>"
       ]
      }
     ],
     "prompt_number": 355
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "plt.scatter(list(range(rental[rental[:,2] == Type[18]].shape[0])),rental[rental[:,2] == Type[18],1])"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 356,
       "text": [
        "<matplotlib.collections.PathCollection at 0x197121668>"
       ]
      },
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<matplotlib.figure.Figure at 0x196fde400>"
       ]
      }
     ],
     "prompt_number": 356
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "plt.scatter(list(range(rental[rental[:,2] == Type[21]].shape[0])),rental[rental[:,2] == Type[21],1])"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 359,
       "text": [
        "<matplotlib.collections.PathCollection at 0x197478048>"
       ]
      },
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<matplotlib.figure.Figure at 0x1972bf780>"
       ]
      }
     ],
     "prompt_number": 359
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0443\u0447\u0435\u0441\u0442\u044c \u043e\u0431\u0430 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430"
     ]
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "\u0414\u043e\u0431\u0430\u0432\u0438\u043c \u0432 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0438 33 \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 ( 27 \u0434\u043b\u044f 'Space Type' \u0438 6 \u0434\u043b\u044f \"Lease Type\u201d)"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "Type = np.array([])\n",
      "Type = np.append(Type,np.unique(rental[:,2]))\n",
      "Type = np.append(Type,np.unique(rental[:,3]))\n",
      "Type = Type.ravel()\n",
      "\n",
      "features = np.zeros((rental.shape[0],33))\n",
      "for i in range(Type.shape[0]-6):\n",
      "    features[:,i] = rental[:, 2]==Type[i]\n",
      "for i in range(27, Type.shape[0]):\n",
      "    features[:,i] = rental[:, 3]==Type[i]\n",
      "    \n",
      "   "
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 248
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "rental_new = np.hstack((rental,features))\n",
      "l = np.random.choice(1800, size = 800, replace=False)\n",
      "m = []\n",
      "for i in range(1800):\n",
      "    if i not in l:\n",
      "        m.append(i)\n",
      "        \n",
      "train_new = rental_new[m]\n",
      "test_new = rental_new[l]"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 249
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import sklearn\n",
      "from sklearn import ensemble\n",
      "clf = sklearn.ensemble.RandomForestRegressor(n_estimators = 10000)\n",
      "clf.fit(train_new[:,4:], train_new[:,1])\n",
      "res = clf.predict(test_new[:,4:])\n",
      "\n",
      "print('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f:', train_new.shape[0])\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean(np.abs(res - test_new[:,1])))\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean((res - test_new[:,1])**2))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f: 1000\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  2.5292563764143936\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  29.95302028080812\n"
       ]
      }
     ],
     "prompt_number": 260
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0441\u0442\u0430\u043b \u0442\u043e\u043b\u044c\u043a\u043e \u0445\u0443\u0436\u0435."
     ]
    },
    {
     "cell_type": "heading",
     "level": 5,
     "metadata": {},
     "source": [
      "\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0432\u043c\u0435\u0441\u0442\u043e \u0431\u0438\u043d\u0430\u0440\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0430 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "Type = np.array([])\n",
      "Type = np.append(Type,np.unique(rental[:, 2]))\n",
      "Type = np.append(Type,np.unique(rental[:, 3]))\n",
      "Type = Type.ravel()\n",
      "\n",
      "features_2 = np.zeros((rental.shape[0], 2))\n",
      "for i in range(Type.shape[0]-6):\n",
      "    features_2[rental[:, 2]==Type[i], 0] = i\n",
      "for i in range(27, Type.shape[0]):\n",
      "    features_2[rental[:, 3]==Type[i], 1] = i-27\n",
      "    \n",
      "   "
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 272
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "rental_new = np.hstack((rental,features_2))\n",
      "l = np.random.choice(1800, size = 800, replace=False)\n",
      "m = []\n",
      "for i in range(1800):\n",
      "    if i not in l:\n",
      "        m.append(i)\n",
      "        \n",
      "train_new = rental_new[m]\n",
      "test_new = rental_new[l]"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 273
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import sklearn\n",
      "from sklearn import ensemble\n",
      "clf = sklearn.ensemble.RandomForestRegressor(n_estimators = 10000)\n",
      "clf.fit(train_new[:,4:], train_new[:,1])\n",
      "res = clf.predict(test_new[:,4:])\n",
      "\n",
      "print('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f:', train_new.shape[0])\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean(np.abs(res - test_new[:,1])))\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean((res - test_new[:,1])**2))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f: 1000\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  2.24310769306075\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  24.921729386781795\n"
       ]
      }
     ],
     "prompt_number": 274
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 \u0443\u043b\u0443\u0447\u0448\u0438\u0442\u044c \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442. \u041f\u043e\u0447\u0442\u0438 \u0432\u0441\u0435\u0433\u0434\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0431\u0435\u0437 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u043e\u0432 'Space Type' \u0438 \"Lease Type\u201d  \u043b\u0443\u0447\u0448\u0435. "
     ]
    },
    {
     "cell_type": "heading",
     "level": 3,
     "metadata": {},
     "source": [
      "\u041f\u0440\u0438\u043c\u0435\u043d\u0438\u043c \u0434\u0440\u0443\u0433\u0438\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u044b\u0445"
     ]
    },
    {
     "cell_type": "heading",
     "level": 5,
     "metadata": {},
     "source": [
      "\u0431\u0443\u0434\u0435\u043c \u043e\u0431\u0443\u0447\u0430\u0442\u044c \u043d\u0430 \u0432\u0441\u0435\u0439 \u0432\u044b\u0431\u043e\u0440\u043a\u0435, \u0443\u0434\u0430\u043b\u044f\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u044b \u0441 \u0441\u0438\u043b\u044c\u043d\u043e \u0431\u043e\u043b\u044c\u0448\u0438\u043c\u0438 \u0446\u0435\u043b\u0435\u0432\u044b\u043c\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c\u0438"
     ]
    },
    {
     "cell_type": "heading",
     "level": 5,
     "metadata": {},
     "source": [
      "SVM"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from sklearn import svm\n",
      "clf = sklearn.svm.SVR(kernel='rbf', degree=3, gamma=0.0, coef0=0.0, tol=0.00001,\n",
      "                C=100.0, epsilon=0.001, shrinking=True, probability=False, cache_size=200, \n",
      "                verbose=False, max_iter=-1, random_state=None)\n",
      "clf.fit(train[:,4:], train[:,1])\n",
      "res = clf.predict(test[:,4:])\n",
      "answer_SVM = res\n",
      "print('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f:', train.shape[0])\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean(np.abs(res - test[:,1])))\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean((res - test[:,1])**2))\n"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f: 1000\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  2.943330953742931\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  33.58858583632497\n"
       ]
      }
     ],
     "prompt_number": 299
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "from sklearn import svm\n",
      "clf = sklearn.svm.SVR(kernel='rbf', degree=3, gamma=0.0, coef0=0.0, tol=0.00001,\n",
      "                C=100.0, epsilon=0.001, shrinking=True, probability=False, cache_size=200, \n",
      "                verbose=False, max_iter=-1, random_state=None)\n",
      "clf.fit(train[train[:,1]<35,4:], train[train[:,1]<35,1])\n",
      "res = clf.predict(test[:,4:])\n",
      "\n",
      "print('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f:', train[train[:,1]<35].shape[0])\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean(np.abs(res - test[:,1])))\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean((res - test[:,1])**2))\n"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f: 987\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  2.8299260155073767\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  33.83984993659955\n"
       ]
      }
     ],
     "prompt_number": 289
    },
    {
     "cell_type": "heading",
     "level": 5,
     "metadata": {},
     "source": [
      "GradientBoosting"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "clf = sklearn.ensemble.GradientBoostingRegressor(loss='lad', learning_rate=0.22, n_estimators=400, subsample=1.0, min_samples_split=2, \n",
      "                                           min_samples_leaf=1, max_depth=2, init=None, random_state=None, max_features=None, alpha=0.95, \n",
      "                                           verbose=0, max_leaf_nodes=None, warm_start=False)\n",
      "sq =  np.log(rental[:rental.shape[0]/2,1].astype('float32'))\n",
      "clf.fit(train[:,4:], train[:,1])\n",
      "res = clf.predict(test[:,4:])\n",
      "\n",
      "print('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f:', train.shape[0])\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean(np.abs(res - test[:,1])))\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean((res - test[:,1])**2))\n"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f: 1000\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  2.359280105573851\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  23.85824965974221\n"
       ]
      }
     ],
     "prompt_number": 290
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "clf = sklearn.ensemble.GradientBoostingRegressor(loss='lad', learning_rate=0.22, n_estimators=400, subsample=1.0, min_samples_split=2, \n",
      "                                           min_samples_leaf=1, max_depth=2, init=None, random_state=None, max_features=None, alpha=0.95, \n",
      "                                           verbose=0, max_leaf_nodes=None, warm_start=False)\n",
      "sq =  np.log(rental[:rental.shape[0]/2,1].astype('float32'))\n",
      "clf.fit(train[train[:,1]<45,4:], train[train[:,1]<45,1])\n",
      "res = clf.predict(test[:,4:])\n",
      "\n",
      "print('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f:', train[train[:,1]<40].shape[0])\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean(np.abs(res - test[:,1])))\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean((res - test[:,1])**2))\n"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f: 995\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  2.401224369914615\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  23.850087904208085\n"
       ]
      }
     ],
     "prompt_number": 293
    },
    {
     "cell_type": "heading",
     "level": 5,
     "metadata": {},
     "source": [
      "\u0412\u043e\u0437\u044c\u043c\u0435\u043c \u0432\u043c\u0435\u0441\u0442\u043e \u0446\u0435\u043b\u0435\u0432\u043e\u0433\u043e \u0432\u0435\u043a\u0442\u043e\u0440\u0430 \u0435\u0433\u043e \u043b\u043e\u0433\u0430\u0440\u0438\u0444\u043c"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "clf = sklearn.ensemble.GradientBoostingRegressor(loss='lad', learning_rate=0.22, n_estimators=400, subsample=1.0, min_samples_split=2, \n",
      "                                           min_samples_leaf=1, max_depth=2, init=None, random_state=None, max_features=None, alpha=0.95, \n",
      "                                           verbose=0, max_leaf_nodes=None, warm_start=False)\n",
      "sq =  np.log( train[train[:,1]<45,1].astype('float32'))\n",
      "clf.fit(train[train[:,1]<45,4:], sq)\n",
      "res = clf.predict(test[:,4:])\n",
      "\n",
      "answer_GB = np.exp(res)\n",
      "\n",
      "print('\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f:', train[train[:,1]<40].shape[0])\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean(np.abs(np.exp(res) - test[:,1])))\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean((np.exp(res) - test[:,1])**2))\n"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0434\u043b\u044f \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f: 995\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  2.3248704565551987\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  22.042675571540222\n"
       ]
      }
     ],
     "prompt_number": 301
    },
    {
     "cell_type": "heading",
     "level": 5,
     "metadata": {},
     "source": [
      "\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0435\u043c \u0441\u043c\u0435\u0448\u0430\u0442\u044c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b"
     ]
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "\u043b\u0443\u0447\u0448\u0435\u0435 \u0447\u0442\u043e \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "res1 = (answer_GB + answer_RF)/2\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean(np.abs(res1 - test[:,1])))\n",
      "print('\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435: ', np.mean((res1 - test[:,1])**2))"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  2.179897481697785\n",
        "\u0421\u0440\u0435\u0434\u043d\u0435\u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435:  20.973606717721605\n"
       ]
      }
     ],
     "prompt_number": 315
    },
    {
     "cell_type": "heading",
     "level": 5,
     "metadata": {},
     "source": [
      "\u0412\u044b\u0432\u0435\u0434\u0435\u043c \u0432\u0441\u0435 \u043d\u0430\u0438\u043b\u0443\u0447\u0448\u0438\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b \u043d\u0430 \u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u0435"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import matplotlib.pyplot as plt\n",
      "\n",
      "\n",
      "N = 3\n",
      "menMeans   = (20.97, 21.65, 22.04) \n",
      "ind = np.arange(N)    \n",
      "width = 0.5     \n",
      "\n",
      "p1 = plt.bar(ind, menMeans, width, color='g')\n",
      "\n",
      "plt.ylabel('Quality')\n",
      "plt.title('')\n",
      "plt.xticks(ind+width/5, ('RF + GB', 'RF', 'GB') )\n",
      "\n",
      "plt.axis([0,4,  20, 24])\n",
      "\n",
      "plt.show()\n",
      "menMeans   = (2.17, 2.12,  2.32) \n",
      "ind = np.arange(N)    \n",
      "width = 0.5     \n",
      "\n",
      "p1 = plt.bar(ind, menMeans, width, color='r')\n",
      "\n",
      "plt.ylabel('Quality')\n",
      "plt.title('')\n",
      "plt.xticks(ind+width/5, ('RF + GB', 'RF', 'GB') )\n",
      "\n",
      "plt.axis([0,4,  2, 2.5])\n",
      "\n",
      "plt.show()\n",
      "\n"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<matplotlib.figure.Figure at 0x10a709080>"
       ]
      },
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<matplotlib.figure.Figure at 0x10b70eac8>"
       ]
      }
     ],
     "prompt_number": 330
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [],
     "language": "python",
     "metadata": {},
     "outputs": []
    }
   ],
   "metadata": {}
  }
 ]
}
