{
 "metadata": {
  "name": ""
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "# \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u043c \u0432\u0441\u0435 \u043d\u0443\u0436\u043d\u044b\u0435 \u043f\u0430\u043a\u0435\u0442\u044b\n",
      "import pandas as pd\n",
      "import numpy as np\n",
      "\n",
      "\n",
      "# \u0434\u043b\u044f \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0445 \u043a\u0430\u0440\u0442\u0438\u043d\u043e\u043a\n",
      "%pylab inline\n",
      "# \u0447\u0443\u0442\u044c \u043f\u043e\u043a\u0440\u0430\u0441\u0438\u0432\u0448\u0435 \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0438:\n",
      "pd.set_option('display.mpl_style', 'default')\n",
      "figsize(10, 3)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "Populating the interactive namespace from numpy and matplotlib\n"
       ]
      }
     ],
     "prompt_number": 10
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "catestd = pd.read_csv('C:\\\\tmp\\\\K_Coupon\\\\coupon_area_test.csv')\n",
      "catestd[:3]"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div style=\"max-width:1500px;overflow:auto;\">\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>SMALL_AREA_NAME</th>\n",
        "      <th>PREF_NAME</th>\n",
        "      <th>COUPON_ID_hash</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>\u4eac\u90fd</td>\n",
        "      <td>\u4eac\u90fd\u5e9c</td>\n",
        "      <td>c76ea297ebd3a5a4d3bf9f75269f66fa</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>\u30df\u30ca\u30df\u4ed6</td>\n",
        "      <td>\u5927\u962a\u5e9c</td>\n",
        "      <td>c76ea297ebd3a5a4d3bf9f75269f66fa</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>\u9280\u5ea7\u30fb\u65b0\u6a4b\u30fb\u6771\u4eac\u30fb\u4e0a\u91ce</td>\n",
        "      <td>\u6771\u4eac\u90fd</td>\n",
        "      <td>dd74dc95ca294afa02db40a543ae1763</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 11,
       "text": [
        "  SMALL_AREA_NAME PREF_NAME                    COUPON_ID_hash\n",
        "0              \u4eac\u90fd       \u4eac\u90fd\u5e9c  c76ea297ebd3a5a4d3bf9f75269f66fa\n",
        "1            \u30df\u30ca\u30df\u4ed6       \u5927\u962a\u5e9c  c76ea297ebd3a5a4d3bf9f75269f66fa\n",
        "2     \u9280\u5ea7\u30fb\u65b0\u6a4b\u30fb\u6771\u4eac\u30fb\u4e0a\u91ce       \u6771\u4eac\u90fd  dd74dc95ca294afa02db40a543ae1763"
       ]
      }
     ],
     "prompt_number": 11
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "catraind = pd.read_csv('C:\\\\tmp\\\\K_Coupon\\\\coupon_area_train.csv')\n",
      "catraind[:3]"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div style=\"max-width:1500px;overflow:auto;\">\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>SMALL_AREA_NAME</th>\n",
        "      <th>PREF_NAME</th>\n",
        "      <th>COUPON_ID_hash</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>\u57fc\u7389</td>\n",
        "      <td>\u57fc\u7389\u770c</td>\n",
        "      <td>6b263844241eea98c5a97f1335ea82af</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>\u5343\u8449</td>\n",
        "      <td>\u5343\u8449\u770c</td>\n",
        "      <td>cc031f250e8bad1e24060263b9fc0ddd</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>\u5343\u8449</td>\n",
        "      <td>\u5343\u8449\u770c</td>\n",
        "      <td>ba5e9b7453ca52ff711635a5d2e8102d</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 12,
       "text": [
        "  SMALL_AREA_NAME PREF_NAME                    COUPON_ID_hash\n",
        "0              \u57fc\u7389       \u57fc\u7389\u770c  6b263844241eea98c5a97f1335ea82af\n",
        "1              \u5343\u8449       \u5343\u8449\u770c  cc031f250e8bad1e24060263b9fc0ddd\n",
        "2              \u5343\u8449       \u5343\u8449\u770c  ba5e9b7453ca52ff711635a5d2e8102d"
       ]
      }
     ],
     "prompt_number": 12
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "cdtraind = pd.read_csv('C:\\\\tmp\\\\K_Coupon\\\\coupon_detail_train.csv')\n",
      "cdtraind[:3]"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div style=\"max-width:1500px;overflow:auto;\">\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>ITEM_COUNT</th>\n",
        "      <th>I_DATE</th>\n",
        "      <th>SMALL_AREA_NAME</th>\n",
        "      <th>PURCHASEID_hash</th>\n",
        "      <th>USER_ID_hash</th>\n",
        "      <th>COUPON_ID_hash</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>1</td>\n",
        "      <td>2012-03-28 15:06:06</td>\n",
        "      <td>\u5175\u5eab</td>\n",
        "      <td>c820a8882374a4e472f0984a8825893f</td>\n",
        "      <td>d9dca3cb44bab12ba313eaa681f663eb</td>\n",
        "      <td>34c48f84026e08355dc3bd19b427f09a</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>1</td>\n",
        "      <td>2011-07-04 23:52:54</td>\n",
        "      <td>\u9280\u5ea7\u30fb\u65b0\u6a4b\u30fb\u6771\u4eac\u30fb\u4e0a\u91ce</td>\n",
        "      <td>1b4eb2435421ede98c8931c42e8220ec</td>\n",
        "      <td>560574a339f1b25e57b0221e486907ed</td>\n",
        "      <td>767673b7a777854a92b73b0934ddfae7</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>1</td>\n",
        "      <td>2011-07-16 00:52:49</td>\n",
        "      <td>\u6075\u6bd4\u5bff\u30fb\u76ee\u9ed2\u30fb\u54c1\u5ddd</td>\n",
        "      <td>36b5f9ba46c44b65587d0b16f2e4c77f</td>\n",
        "      <td>560574a339f1b25e57b0221e486907ed</td>\n",
        "      <td>4f3b5b91d9831192557c056022fdc1f2</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 13,
       "text": [
        "   ITEM_COUNT               I_DATE SMALL_AREA_NAME  \\\n",
        "0           1  2012-03-28 15:06:06              \u5175\u5eab   \n",
        "1           1  2011-07-04 23:52:54     \u9280\u5ea7\u30fb\u65b0\u6a4b\u30fb\u6771\u4eac\u30fb\u4e0a\u91ce   \n",
        "2           1  2011-07-16 00:52:49       \u6075\u6bd4\u5bff\u30fb\u76ee\u9ed2\u30fb\u54c1\u5ddd   \n",
        "\n",
        "                    PURCHASEID_hash                      USER_ID_hash  \\\n",
        "0  c820a8882374a4e472f0984a8825893f  d9dca3cb44bab12ba313eaa681f663eb   \n",
        "1  1b4eb2435421ede98c8931c42e8220ec  560574a339f1b25e57b0221e486907ed   \n",
        "2  36b5f9ba46c44b65587d0b16f2e4c77f  560574a339f1b25e57b0221e486907ed   \n",
        "\n",
        "                     COUPON_ID_hash  \n",
        "0  34c48f84026e08355dc3bd19b427f09a  \n",
        "1  767673b7a777854a92b73b0934ddfae7  \n",
        "2  4f3b5b91d9831192557c056022fdc1f2  "
       ]
      }
     ],
     "prompt_number": 13
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "cltraind = pd.read_csv('C:\\\\tmp\\\\K_Coupon\\\\coupon_list_train.csv')\n",
      "cltraind[:3]"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div style=\"max-width:1500px;overflow:auto;\">\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>CAPSULE_TEXT</th>\n",
        "      <th>GENRE_NAME</th>\n",
        "      <th>PRICE_RATE</th>\n",
        "      <th>CATALOG_PRICE</th>\n",
        "      <th>DISCOUNT_PRICE</th>\n",
        "      <th>DISPFROM</th>\n",
        "      <th>DISPEND</th>\n",
        "      <th>DISPPERIOD</th>\n",
        "      <th>VALIDFROM</th>\n",
        "      <th>VALIDEND</th>\n",
        "      <th>...</th>\n",
        "      <th>USABLE_DATE_THU</th>\n",
        "      <th>USABLE_DATE_FRI</th>\n",
        "      <th>USABLE_DATE_SAT</th>\n",
        "      <th>USABLE_DATE_SUN</th>\n",
        "      <th>USABLE_DATE_HOLIDAY</th>\n",
        "      <th>USABLE_DATE_BEFORE_HOLIDAY</th>\n",
        "      <th>large_area_name</th>\n",
        "      <th>ken_name</th>\n",
        "      <th>small_area_name</th>\n",
        "      <th>COUPON_ID_hash</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>\u30b0\u30eb\u30e1</td>\n",
        "      <td>\u30b0\u30eb\u30e1</td>\n",
        "      <td>50</td>\n",
        "      <td>3000</td>\n",
        "      <td>1500</td>\n",
        "      <td>2011-07-08 12:00:00</td>\n",
        "      <td>2011-07-09 12:00:00</td>\n",
        "      <td>1</td>\n",
        "      <td>2011-07-10</td>\n",
        "      <td>2011-12-08</td>\n",
        "      <td>...</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>\u95a2\u6771</td>\n",
        "      <td>\u57fc\u7389\u770c</td>\n",
        "      <td>\u57fc\u7389</td>\n",
        "      <td>6b263844241eea98c5a97f1335ea82af</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>\u30b0\u30eb\u30e1</td>\n",
        "      <td>\u30b0\u30eb\u30e1</td>\n",
        "      <td>51</td>\n",
        "      <td>2080</td>\n",
        "      <td>1000</td>\n",
        "      <td>2011-07-01 12:00:00</td>\n",
        "      <td>2011-07-02 12:00:00</td>\n",
        "      <td>1</td>\n",
        "      <td>2011-07-03</td>\n",
        "      <td>2011-12-04</td>\n",
        "      <td>...</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>\u95a2\u6771</td>\n",
        "      <td>\u5343\u8449\u770c</td>\n",
        "      <td>\u5343\u8449</td>\n",
        "      <td>cc031f250e8bad1e24060263b9fc0ddd</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>\u30b0\u30eb\u30e1</td>\n",
        "      <td>\u30b0\u30eb\u30e1</td>\n",
        "      <td>50</td>\n",
        "      <td>7000</td>\n",
        "      <td>3500</td>\n",
        "      <td>2011-07-12 12:00:00</td>\n",
        "      <td>2011-07-15 12:00:00</td>\n",
        "      <td>3</td>\n",
        "      <td>2011-07-16</td>\n",
        "      <td>2012-01-11</td>\n",
        "      <td>...</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>\u95a2\u6771</td>\n",
        "      <td>\u5343\u8449\u770c</td>\n",
        "      <td>\u5343\u8449</td>\n",
        "      <td>ba5e9b7453ca52ff711635a5d2e8102d</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>3 rows \u00d7 24 columns</p>\n",
        "</div>"
       ],
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 14,
       "text": [
        "  CAPSULE_TEXT GENRE_NAME  PRICE_RATE  CATALOG_PRICE  DISCOUNT_PRICE  \\\n",
        "0          \u30b0\u30eb\u30e1        \u30b0\u30eb\u30e1          50           3000            1500   \n",
        "1          \u30b0\u30eb\u30e1        \u30b0\u30eb\u30e1          51           2080            1000   \n",
        "2          \u30b0\u30eb\u30e1        \u30b0\u30eb\u30e1          50           7000            3500   \n",
        "\n",
        "              DISPFROM              DISPEND  DISPPERIOD   VALIDFROM  \\\n",
        "0  2011-07-08 12:00:00  2011-07-09 12:00:00           1  2011-07-10   \n",
        "1  2011-07-01 12:00:00  2011-07-02 12:00:00           1  2011-07-03   \n",
        "2  2011-07-12 12:00:00  2011-07-15 12:00:00           3  2011-07-16   \n",
        "\n",
        "     VALIDEND                ...                 USABLE_DATE_THU  \\\n",
        "0  2011-12-08                ...                               1   \n",
        "1  2011-12-04                ...                               1   \n",
        "2  2012-01-11                ...                               1   \n",
        "\n",
        "   USABLE_DATE_FRI  USABLE_DATE_SAT  USABLE_DATE_SUN  USABLE_DATE_HOLIDAY  \\\n",
        "0                0                0                1                    1   \n",
        "1                1                1                1                    1   \n",
        "2                1                1                1                    1   \n",
        "\n",
        "   USABLE_DATE_BEFORE_HOLIDAY  large_area_name  ken_name  small_area_name  \\\n",
        "0                           0               \u95a2\u6771       \u57fc\u7389\u770c               \u57fc\u7389   \n",
        "1                           1               \u95a2\u6771       \u5343\u8449\u770c               \u5343\u8449   \n",
        "2                           1               \u95a2\u6771       \u5343\u8449\u770c               \u5343\u8449   \n",
        "\n",
        "                     COUPON_ID_hash  \n",
        "0  6b263844241eea98c5a97f1335ea82af  \n",
        "1  cc031f250e8bad1e24060263b9fc0ddd  \n",
        "2  ba5e9b7453ca52ff711635a5d2e8102d  \n",
        "\n",
        "[3 rows x 24 columns]"
       ]
      }
     ],
     "prompt_number": 14
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "cltestd = pd.read_csv('C:\\\\tmp\\\\K_Coupon\\\\coupon_list_test.csv')\n",
      "cltestd[:3]"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div style=\"max-width:1500px;overflow:auto;\">\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>CAPSULE_TEXT</th>\n",
        "      <th>GENRE_NAME</th>\n",
        "      <th>PRICE_RATE</th>\n",
        "      <th>CATALOG_PRICE</th>\n",
        "      <th>DISCOUNT_PRICE</th>\n",
        "      <th>DISPFROM</th>\n",
        "      <th>DISPEND</th>\n",
        "      <th>DISPPERIOD</th>\n",
        "      <th>VALIDFROM</th>\n",
        "      <th>VALIDEND</th>\n",
        "      <th>...</th>\n",
        "      <th>USABLE_DATE_THU</th>\n",
        "      <th>USABLE_DATE_FRI</th>\n",
        "      <th>USABLE_DATE_SAT</th>\n",
        "      <th>USABLE_DATE_SUN</th>\n",
        "      <th>USABLE_DATE_HOLIDAY</th>\n",
        "      <th>USABLE_DATE_BEFORE_HOLIDAY</th>\n",
        "      <th>large_area_name</th>\n",
        "      <th>ken_name</th>\n",
        "      <th>small_area_name</th>\n",
        "      <th>COUPON_ID_hash</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>\u30b0\u30eb\u30e1</td>\n",
        "      <td>\u30b0\u30eb\u30e1</td>\n",
        "      <td>52</td>\n",
        "      <td>5659</td>\n",
        "      <td>2690</td>\n",
        "      <td>2012-06-26 12:00:00</td>\n",
        "      <td>2012-06-30 12:00:00</td>\n",
        "      <td>4</td>\n",
        "      <td>2012-07-01</td>\n",
        "      <td>2012-10-27</td>\n",
        "      <td>...</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>\u95a2\u897f</td>\n",
        "      <td>\u5927\u962a\u5e9c</td>\n",
        "      <td>\u30df\u30ca\u30df\u4ed6</td>\n",
        "      <td>c76ea297ebd3a5a4d3bf9f75269f66fa</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>\u30b0\u30eb\u30e1</td>\n",
        "      <td>\u30b0\u30eb\u30e1</td>\n",
        "      <td>52</td>\n",
        "      <td>18000</td>\n",
        "      <td>8500</td>\n",
        "      <td>2012-06-27 12:00:00</td>\n",
        "      <td>2012-07-04 12:00:00</td>\n",
        "      <td>7</td>\n",
        "      <td>2012-07-05</td>\n",
        "      <td>2012-10-13</td>\n",
        "      <td>...</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>0</td>\n",
        "      <td>0</td>\n",
        "      <td>1</td>\n",
        "      <td>\u95a2\u6771</td>\n",
        "      <td>\u6771\u4eac\u90fd</td>\n",
        "      <td>\u9280\u5ea7\u30fb\u65b0\u6a4b\u30fb\u6771\u4eac\u30fb\u4e0a\u91ce</td>\n",
        "      <td>dd74dc95ca294afa02db40a543ae1763</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>\u30b0\u30eb\u30e1</td>\n",
        "      <td>\u30b0\u30eb\u30e1</td>\n",
        "      <td>51</td>\n",
        "      <td>7200</td>\n",
        "      <td>3480</td>\n",
        "      <td>2012-06-28 12:00:00</td>\n",
        "      <td>2012-07-05 12:00:00</td>\n",
        "      <td>7</td>\n",
        "      <td>2012-07-06</td>\n",
        "      <td>2012-12-28</td>\n",
        "      <td>...</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>1</td>\n",
        "      <td>\u95a2\u6771</td>\n",
        "      <td>\u795e\u5948\u5ddd\u770c</td>\n",
        "      <td>\u6a2a\u6d5c</td>\n",
        "      <td>c65b550cbef918796ad53b1d5b7165c1</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "<p>3 rows \u00d7 24 columns</p>\n",
        "</div>"
       ],
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 15,
       "text": [
        "  CAPSULE_TEXT GENRE_NAME  PRICE_RATE  CATALOG_PRICE  DISCOUNT_PRICE  \\\n",
        "0          \u30b0\u30eb\u30e1        \u30b0\u30eb\u30e1          52           5659            2690   \n",
        "1          \u30b0\u30eb\u30e1        \u30b0\u30eb\u30e1          52          18000            8500   \n",
        "2          \u30b0\u30eb\u30e1        \u30b0\u30eb\u30e1          51           7200            3480   \n",
        "\n",
        "              DISPFROM              DISPEND  DISPPERIOD   VALIDFROM  \\\n",
        "0  2012-06-26 12:00:00  2012-06-30 12:00:00           4  2012-07-01   \n",
        "1  2012-06-27 12:00:00  2012-07-04 12:00:00           7  2012-07-05   \n",
        "2  2012-06-28 12:00:00  2012-07-05 12:00:00           7  2012-07-06   \n",
        "\n",
        "     VALIDEND                ...                 USABLE_DATE_THU  \\\n",
        "0  2012-10-27                ...                               1   \n",
        "1  2012-10-13                ...                               1   \n",
        "2  2012-12-28                ...                               1   \n",
        "\n",
        "   USABLE_DATE_FRI  USABLE_DATE_SAT  USABLE_DATE_SUN  USABLE_DATE_HOLIDAY  \\\n",
        "0                1                1                1                    1   \n",
        "1                1                1                0                    0   \n",
        "2                1                1                1                    1   \n",
        "\n",
        "   USABLE_DATE_BEFORE_HOLIDAY  large_area_name  ken_name  small_area_name  \\\n",
        "0                           1               \u95a2\u897f       \u5927\u962a\u5e9c             \u30df\u30ca\u30df\u4ed6   \n",
        "1                           1               \u95a2\u6771       \u6771\u4eac\u90fd      \u9280\u5ea7\u30fb\u65b0\u6a4b\u30fb\u6771\u4eac\u30fb\u4e0a\u91ce   \n",
        "2                           1               \u95a2\u6771      \u795e\u5948\u5ddd\u770c               \u6a2a\u6d5c   \n",
        "\n",
        "                     COUPON_ID_hash  \n",
        "0  c76ea297ebd3a5a4d3bf9f75269f66fa  \n",
        "1  dd74dc95ca294afa02db40a543ae1763  \n",
        "2  c65b550cbef918796ad53b1d5b7165c1  \n",
        "\n",
        "[3 rows x 24 columns]"
       ]
      }
     ],
     "prompt_number": 15
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "cvtraind = pd.read_csv('C:\\\\tmp\\\\K_Coupon\\\\coupon_visit_train.csv')\n",
      "cvtraind[:3]"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div style=\"max-width:1500px;overflow:auto;\">\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>PURCHASE_FLG</th>\n",
        "      <th>I_DATE</th>\n",
        "      <th>PAGE_SERIAL</th>\n",
        "      <th>REFERRER_hash</th>\n",
        "      <th>VIEW_COUPON_ID_hash</th>\n",
        "      <th>USER_ID_hash</th>\n",
        "      <th>SESSION_ID_hash</th>\n",
        "      <th>PURCHASEID_hash</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>0</td>\n",
        "      <td>2012-03-28 14:15:00</td>\n",
        "      <td>7</td>\n",
        "      <td>7d3892e54acb559ae36c459978489330</td>\n",
        "      <td>34c48f84026e08355dc3bd19b427f09a</td>\n",
        "      <td>d9dca3cb44bab12ba313eaa681f663eb</td>\n",
        "      <td>673af822615593249e7c6a9a1a6bbb1a</td>\n",
        "      <td>NaN</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>0</td>\n",
        "      <td>2012-03-28 14:17:28</td>\n",
        "      <td>9</td>\n",
        "      <td>7d3892e54acb559ae36c459978489330</td>\n",
        "      <td>34c48f84026e08355dc3bd19b427f09a</td>\n",
        "      <td>d9dca3cb44bab12ba313eaa681f663eb</td>\n",
        "      <td>673af822615593249e7c6a9a1a6bbb1a</td>\n",
        "      <td>NaN</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>0</td>\n",
        "      <td>2012-03-28 14:20:05</td>\n",
        "      <td>16</td>\n",
        "      <td>7d3892e54acb559ae36c459978489330</td>\n",
        "      <td>17c450c3b470c045d35ec22b02daa690</td>\n",
        "      <td>d9dca3cb44bab12ba313eaa681f663eb</td>\n",
        "      <td>673af822615593249e7c6a9a1a6bbb1a</td>\n",
        "      <td>NaN</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 16,
       "text": [
        "   PURCHASE_FLG               I_DATE  PAGE_SERIAL  \\\n",
        "0             0  2012-03-28 14:15:00            7   \n",
        "1             0  2012-03-28 14:17:28            9   \n",
        "2             0  2012-03-28 14:20:05           16   \n",
        "\n",
        "                      REFERRER_hash               VIEW_COUPON_ID_hash  \\\n",
        "0  7d3892e54acb559ae36c459978489330  34c48f84026e08355dc3bd19b427f09a   \n",
        "1  7d3892e54acb559ae36c459978489330  34c48f84026e08355dc3bd19b427f09a   \n",
        "2  7d3892e54acb559ae36c459978489330  17c450c3b470c045d35ec22b02daa690   \n",
        "\n",
        "                       USER_ID_hash                   SESSION_ID_hash  \\\n",
        "0  d9dca3cb44bab12ba313eaa681f663eb  673af822615593249e7c6a9a1a6bbb1a   \n",
        "1  d9dca3cb44bab12ba313eaa681f663eb  673af822615593249e7c6a9a1a6bbb1a   \n",
        "2  d9dca3cb44bab12ba313eaa681f663eb  673af822615593249e7c6a9a1a6bbb1a   \n",
        "\n",
        "  PURCHASEID_hash  \n",
        "0             NaN  \n",
        "1             NaN  \n",
        "2             NaN  "
       ]
      }
     ],
     "prompt_number": 16
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "ulistd = pd.read_csv('C:\\\\tmp\\\\K_Coupon\\\\user_list.csv')\n",
      "ulistd[:3]"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "html": [
        "<div style=\"max-width:1500px;overflow:auto;\">\n",
        "<table border=\"1\" class=\"dataframe\">\n",
        "  <thead>\n",
        "    <tr style=\"text-align: right;\">\n",
        "      <th></th>\n",
        "      <th>REG_DATE</th>\n",
        "      <th>SEX_ID</th>\n",
        "      <th>AGE</th>\n",
        "      <th>WITHDRAW_DATE</th>\n",
        "      <th>PREF_NAME</th>\n",
        "      <th>USER_ID_hash</th>\n",
        "    </tr>\n",
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
        "      <th>0</th>\n",
        "      <td>2012-03-28 14:14:18</td>\n",
        "      <td>f</td>\n",
        "      <td>25</td>\n",
        "      <td>NaN</td>\n",
        "      <td>NaN</td>\n",
        "      <td>d9dca3cb44bab12ba313eaa681f663eb</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>1</th>\n",
        "      <td>2011-05-18 00:41:48</td>\n",
        "      <td>f</td>\n",
        "      <td>34</td>\n",
        "      <td>NaN</td>\n",
        "      <td>\u6771\u4eac\u90fd</td>\n",
        "      <td>560574a339f1b25e57b0221e486907ed</td>\n",
        "    </tr>\n",
        "    <tr>\n",
        "      <th>2</th>\n",
        "      <td>2011-06-13 16:36:58</td>\n",
        "      <td>m</td>\n",
        "      <td>41</td>\n",
        "      <td>NaN</td>\n",
        "      <td>\u611b\u77e5\u770c</td>\n",
        "      <td>e66ae91b978b3229f8fd858c80615b73</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
        "</div>"
       ],
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 17,
       "text": [
        "              REG_DATE SEX_ID  AGE WITHDRAW_DATE PREF_NAME  \\\n",
        "0  2012-03-28 14:14:18      f   25           NaN       NaN   \n",
        "1  2011-05-18 00:41:48      f   34           NaN       \u6771\u4eac\u90fd   \n",
        "2  2011-06-13 16:36:58      m   41           NaN       \u611b\u77e5\u770c   \n",
        "\n",
        "                       USER_ID_hash  \n",
        "0  d9dca3cb44bab12ba313eaa681f663eb  \n",
        "1  560574a339f1b25e57b0221e486907ed  \n",
        "2  e66ae91b978b3229f8fd858c80615b73  "
       ]
      }
     ],
     "prompt_number": 17
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "ul.shape\n",
      "#np.isnan()\n",
      "(np.array(ul.WITHDRAW_DATE.values))\n",
      "#numpy.isnan(np.array(ul.WITHDRAW_DATE.values))\n",
      "\n",
      "np.isnan(ul.AGE.values==34)\n",
      "tmp = ul.WITHDRAW_DATE.values.flatten()\n",
      "#tmp = ul.AGE.values.flatten()\n",
      "type(tmp[0])\n",
      "tmp = tmp.astype(float)\n",
      "isnan(tmp[0:2])\n",
      "#np.isnan(ul.AGE.values[0:2])\n",
      "#tmp.shape\n",
      "\n"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "ename": "ValueError",
       "evalue": "invalid literal for float(): 2011-09-04 10:55:43",
       "output_type": "pyerr",
       "traceback": [
        "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m\n\u001b[1;31mValueError\u001b[0m                                Traceback (most recent call last)",
        "\u001b[1;32m<ipython-input-78-3aceb70e81a4>\u001b[0m in \u001b[0;36m<module>\u001b[1;34m()\u001b[0m\n\u001b[0;32m      8\u001b[0m \u001b[1;31m#tmp = ul.AGE.values.flatten()\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m      9\u001b[0m \u001b[0mtype\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mtmp\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[1;32m---> 10\u001b[1;33m \u001b[0mtmp\u001b[0m \u001b[1;33m=\u001b[0m \u001b[0mtmp\u001b[0m\u001b[1;33m.\u001b[0m\u001b[0mastype\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mfloat\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0m\u001b[0;32m     11\u001b[0m \u001b[0misnan\u001b[0m\u001b[1;33m(\u001b[0m\u001b[0mtmp\u001b[0m\u001b[1;33m[\u001b[0m\u001b[1;36m0\u001b[0m\u001b[1;33m:\u001b[0m\u001b[1;36m2\u001b[0m\u001b[1;33m]\u001b[0m\u001b[1;33m)\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n\u001b[0;32m     12\u001b[0m \u001b[1;31m#np.isnan(ul.AGE.values[0:2])\u001b[0m\u001b[1;33m\u001b[0m\u001b[1;33m\u001b[0m\u001b[0m\n",
        "\u001b[1;31mValueError\u001b[0m: invalid literal for float(): 2011-09-04 10:55:43"
       ]
      }
     ],
     "prompt_number": 78
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "tmp = ul.WITHDRAW_DATE.values.flatten()\n",
      "tmp[:17]\n",
      "#np.isnan(tmp)"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 104,
       "text": [
        "array([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,\n",
        "       nan, nan, nan, '2012-01-26 11:54:33'], dtype=object)"
       ]
      }
     ],
     "prompt_number": 104
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "ulist_cltest <- pd.merge(ulistd, cltestd, by.x=u\"PREF_NAME\", by.y=u\"ken_name\", all.x=TRUE)\n",
      "#cltest[:1].columns\n",
      "#ulist"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "ename": "SyntaxError",
       "evalue": "keyword can't be an expression (<ipython-input-18-ed5a7e17a1f3>, line 1)",
       "output_type": "pyerr",
       "traceback": [
        "\u001b[1;36m  File \u001b[1;32m\"<ipython-input-18-ed5a7e17a1f3>\"\u001b[1;36m, line \u001b[1;32m1\u001b[0m\n\u001b[1;33m    ulist_cltest <- pd.merge(ulistd, cltestd, by.x=u\"PREF_NAME\", by.y=u\"ken_name\", all.x=TRUE)\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m keyword can't be an expression\n"
       ]
      }
     ],
     "prompt_number": 18
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "#reload(pd)\n",
      "pd.__version__"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 19,
       "text": [
        "'0.16.2'"
       ]
      }
     ],
     "prompt_number": 19
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "a = np.array([[1,2,3],[4,5,6]])"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [],
     "prompt_number": 20
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "a[:] = 0\n",
      "a"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "pyout",
       "prompt_number": 23,
       "text": [
        "array([[0, 0, 0],\n",
        "       [0, 0, 0]])"
       ]
      }
     ],
     "prompt_number": 23
    }
   ],
   "metadata": {}
  }
 ]
}
